#
# System configuration file for NeoMutt
#

# Default list of header fields to weed when displaying.
# Ignore all lines by default...
ignore *

# ... then allow these through.
unignore from: subject to cc date x-mailer x-url user-agent

# Display the fields in this order
hdr_order date from to cc subject

# imitate the old search-body function
macro index \eb "<search>~b " "search in message bodies"

# simulate the old url menu
macro index,pager,attach,compose \cb "\
<enter-command> set my_pipe_decode=\$pipe_decode pipe_decode<Enter>\
<pipe-message> urlview<Enter>\
<enter-command> set pipe_decode=\$my_pipe_decode; unset my_pipe_decode<Enter>" \
"call urlview to extract URLs out of a message"

# Show documentation when pressing F1
macro generic,pager <F1> "<shell-escape> less /usr/share/doc/neomutt/manual.txt<Enter>" "show NeoMutt documentation"
# and also F2, as some terminals use F1
macro generic,pager <F2> "<shell-escape> less /usr/share/doc/neomutt/manual.txt<Enter>" "show NeoMutt documentation"

# show the incoming mailboxes list (just like "neomutt -y") and back when pressing "y"
macro index y "<change-folder>?" "show incoming mailboxes list"
macro pager y "<exit><change-folder>?" "show incoming mailboxes list"
bind browser y exit

# Handler for gzip compressed mailboxes
# open-hook   '\.gz$' "gzip --stdout --decompress '%f' >  '%t'"
# close-hook  '\.gz$' "gzip --stdout              '%t' >  '%f'"
# append-hook '\.gz$' "gzip --stdout              '%t' >> '%f'"

bind editor <delete> delete-char

# If NeoMutt is unable to determine your site's domain name correctly, you can
# set the default here.
#
# set hostname=cs.hmc.edu

# If your sendmail supports the -B8BITMIME flag, enable the following
#
# set use_8bit_mime

# Use mime.types to look up handlers for application/octet-stream. Can
# be undone with unmime_lookup.
mime_lookup application/octet-stream

# Please see the manual (section "attachments")  for detailed
# documentation of the "attachments" command.
#
# Removing a pattern from a list removes that pattern literally. It
# does not remove any type matching the pattern.
#
#  attachments   +A */.*
#  attachments   +A image/jpeg
#  unattachments +A */.*
#
# This leaves "attached" image/jpeg files on the allowed attachments
# list. It does not remove all items, as you might expect, because the
# second */.* is not a matching expression at this time.
#
# Remember: "unattachments" only undoes what "attachments" has done!
# It does not trigger any matching on actual messages.

# Qualify any MIME part with an "attachment" disposition, EXCEPT for
# text/vcard, text/x-vcard, application/pgp.*, application/pkcs7-.* and
# application/x-pkcs7-.* parts. (PGP and S/MIME parts are already known
# to NeoMutt, and can be searched for with ~g, ~G, and ~k.)
attachments   +A */.*
attachments   -A text/vcard text/x-vcard
attachments   -A application/pgp.*
attachments   -A application/pkcs7-.* application/x-pkcs7-.*

# Discount all MIME parts with an "inline" disposition, unless they're
# text/plain. (Why inline a text/plain part unless it's external to the
# message flow?)
attachments   +I text/plain

# These two lines make NeoMutt qualify MIME containers.  (So, for example,
# a message/rfc822 forward will count as an attachment.)  The first
# line is unnecessary if you already have "attach-allow */.*", of
# course.  These are off by default!  The MIME elements contained
# within a message/* or multipart/* are still examined, even if the
# containers themselves don't qualify.
# Recursion into multipart/alternatives containers is controlled by the
# $count_alternatives setting.
#attachments  +A message/.* multipart/.*
#attachments  +I message/.* multipart/.*

# You probably don't really care to know about deleted attachments.
attachments   -A message/external-body
attachments   -I message/external-body

# System-wide CA file managed by the ca-certificates package
set ssl_ca_certificates_file="/etc/ssl/certs/ca-certificates.crt"

##
## More settings
##


# set abort_backspace=yes
#
# Name: abort_backspace
# Type: boolean
# Default: yes
# 
# 
# If set, hitting backspace against an empty prompt aborts the
# prompt.
# 
# 
# set abort_key="007"
#
# Name: abort_key
# Type: string
# Default: "007"
# 
# 
# Specifies the key that can be used to abort prompts.  The format is the
# same as used in "bind" commands.  The default is equivalent to "Ctrl-G".
# Note that the specified key should not be used in other bindings, as the
# abort operation has higher precedence and the binding will not have the
# desired effect.
# 
# Example:
# set abort_key = "<Esc>"
# 
# Please note that when using <Esc> as the abort key, you may also want to
# set the environment variable ESCDELAY to a low value or even 0 which will
# reduce the time that ncurses waits to distinguish singular <Esc> key
# presses from the start of a terminal escape sequence. The default time is
# 1000 milliseconds and thus quite noticeable.
# 
# 
# set abort_noattach=no
#
# Name: abort_noattach
# Type: quadoption
# Default: no
# 
# 
# If set to yes, when composing messages containing the regular
# expression specified by $abort_noattach_regex and no attachments are
# given, composition will be aborted. If set to no, composing messages
# as such will never be aborted.
# 
# Example:
# set abort_noattach_regex = "\\<attach(|ed|ments?)\\>"
# 
# 
# set abort_noattach_regex="\\<(attach|attached|attachments?)\\>"
#
# Name: abort_noattach_regex
# Type: regular expression
# Default: "\\<(attach|attached|attachments?)\\>"
# 
# 
# Specifies a regular expression to match against the body of the message, to
# determine if an attachment was mentioned but mistakenly forgotten.  If it
# matches, $abort_noattach will be consulted to determine if message sending
# will be aborted.
# 
# Like other regular expressions in NeoMutt, the search is case sensitive
# if the pattern contains at least one upper case letter, and case
# insensitive otherwise.
# 
# 
# set abort_nosubject=ask-yes
#
# Name: abort_nosubject
# Type: quadoption
# Default: ask-yes
# 
# 
# If set to yes, when composing messages and no subject is given
# at the subject prompt, composition will be aborted.  If set to
# no, composing messages with no subject given at the subject
# prompt will never be aborted.
# 
# 
# set abort_unmodified=yes
#
# Name: abort_unmodified
# Type: quadoption
# Default: yes
# 
# 
# If set to yes, composition will automatically abort after
# editing the message body if no changes are made to the file (this
# check only happens after the first edit of the file).  When set
# to no, composition will never be aborted.
# 
# 
# set account_command=""
#
# Name: account_command
# Type: command
# Default: ""
# 
# 
# If set, this command is used to retrieve account credentials. The command
# is invoked passing a number of --key value arguments with the
# specifics of the account to lookup. The command writes to standard output a
# number of key: value lines. Currently supported arguments are
# --hostname, --username, and --type, where type can be
# any of imap, imaps, pop, pops, smtp,
# smtps, nntp, and nntps. Currently supported output lines
# are login, username, and password.
# 
# 
# set alias_file="~/.neomuttrc"
#
# Name: alias_file
# Type: path
# Default: "~/.neomuttrc"
# 
# 
# The default file in which to save aliases created by the
# <create-alias> function. Entries added to this file are
# encoded in the character set specified by $config_charset if it
# is set or the current character set otherwise.
# 
# Note: NeoMutt will not automatically source this file; you must
# explicitly use the "source" command for it to be executed in case
# this option points to a dedicated alias file.
# 
# The default for this option is the currently used neomuttrc file, or
# "~/.neomuttrc" if no user neomuttrc was found.
# 
# 
# set alias_format="%3i %f%t %-15a %-56A | %C%> %Y"
#
# Name: alias_format
# Type: string
# Default: "%3i %f%t %-15a %-56A | %C%> %Y"
# 
# 
# Specifies the format of the data displayed for the "alias" menu.  The
# following printf(3)-style sequences are available:
# %a      Alias name
# %A      Full Address (Name and Email)
# %C      Comment
# %E      Email Address
# %f      Flags - currently, a "d" for an alias marked for deletion
# %i      Index number
# %N      Real name
# %t      Alias is tagged (selected)
# %Y      User-defined tags (labels)
# %>X     right justify the rest of the string and pad with character "X"
# %|X     pad to the end of the line with character "X"
# %*X     soft-fill with character "X" as pad
# 
# 
# For an explanation of "soft-fill", see the $index_format documentation.
# 
# The following sequences are deprecated; they will be removed in the future.
# %c      Use %C instead
# %n      Use %i instead
# %r      Use %A instead
# 
# 
# set alias_sort=alias
#
# Name: alias_sort
# Type: sort order
# Default: alias
# 
# 
# Specifies how the entries in the "alias" menu are sorted.  The
# following are legal values:
# - address (sort alphabetically by email address)
# - alias (sort alphabetically by alias name)
# - unsorted (leave in order specified in .neomuttrc)
# 
# 
# Note: This also affects the entries of the address query menu, thus
# potentially overruling the order of entries as generated by $query_command.
# 
# 
# set allow_8bit=yes
#
# Name: allow_8bit
# Type: boolean
# Default: yes
# 
# 
# Controls whether 8-bit data is converted to 7-bit using either Quoted-
# Printable or Base64 encoding when sending mail.
# 
# 
# set allow_ansi=no
#
# Name: allow_ansi
# Type: boolean
# Default: no
# 
# 
# Controls whether ANSI color codes in messages (and color tags in
# rich text messages) are to be interpreted.
# Messages containing these codes are rare, but if this option is set,
# their text will be colored accordingly. Note that this may override
# your color choices, and even present a security problem, since a
# message could include a line like
# [-- PGP output follows ...
# 
# and give it the same color as your attachment color (see also
# $crypt_timestamp).
# 
# 
# set arrow_cursor=no
#
# Name: arrow_cursor
# Type: boolean
# Default: no
# 
# 
# When set, an arrow ("->") will be used to indicate the current entry
# in menus instead of highlighting the whole line.  On slow network or modem
# links this will make response faster because there is less that has to
# be redrawn on the screen when moving to the next or previous entries
# in the menu.
# 
# 
# set arrow_string="->"
#
# Name: arrow_string
# Type: string
# Default: "->"
# 
# 
# Specifies the string of arrow_cursor when arrow_cursor enabled.
# 
# 
# set ascii_chars=no
#
# Name: ascii_chars
# Type: boolean
# Default: no
# 
# 
# If set, NeoMutt will use plain ASCII characters when displaying thread
# and attachment trees, instead of the default ACS characters.
# 
# 
# set ask_bcc=no
#
# Name: ask_bcc
# Type: boolean
# Default: no
# 
# 
# If set, NeoMutt will prompt you for blind-carbon-copy (Bcc) recipients
# before editing an outgoing message.
# 
# 
# set ask_cc=no
#
# Name: ask_cc
# Type: boolean
# Default: no
# 
# 
# If set, NeoMutt will prompt you for carbon-copy (Cc) recipients before
# editing the body of an outgoing message.
# 
# 
# set ask_followup_to=no
#
# Name: ask_followup_to
# Type: boolean
# Default: no
# 
# 
# If set, NeoMutt will prompt you for follow-up groups before editing
# the body of an outgoing message.
# 
# 
# set ask_x_comment_to=no
#
# Name: ask_x_comment_to
# Type: boolean
# Default: no
# 
# 
# If set, NeoMutt will prompt you for x-comment-to field before editing
# the body of an outgoing message.
# 
# 
# set assumed_charset=""
#
# Name: assumed_charset
# Type: string list
# Default: ""
# 
# 
# This variable is a colon-separated list of character encoding
# schemes for messages without character encoding indication.
# Header field values and message body content without character encoding
# indication would be assumed that they are written in one of this list.
# By default, all the header fields and message body without any charset
# indication are assumed to be in "us-ascii".
# 
# For example, Japanese users might prefer this:
# set assumed_charset="iso-2022-jp:euc-jp:shift_jis:utf-8"
# 
# However, only the first content is valid for the message body.
# 
# 
# set attach_charset=""
#
# Name: attach_charset
# Type: string list
# Default: ""
# 
# 
# This variable is a colon-separated list of character encoding
# schemes for text file attachments. NeoMutt uses this setting to guess
# which encoding files being attached are encoded in to convert them to
# a proper character set given in $send_charset.
# 
# If unset, the value of $charset will be used instead.
# For example, the following configuration would work for Japanese
# text handling:
# set attach_charset="iso-2022-jp:euc-jp:shift_jis:utf-8"
# 
# Note: for Japanese users, "iso-2022-*" must be put at the head
# of the value as shown above if included.
# 
# 
# set attach_format="%u%D%I %t%4n %T%d %> [%.7m/%.10M, %.6e%<C?, %C>, %s] "
#
# Name: attach_format
# Type: string
# Default: "%u%D%I %t%4n %T%d %> [%.7m/%.10M, %.6e%<C?, %C>, %s] "
# 
# 
# This variable describes the format of the "attachment" menu.  The
# following printf(3)-style sequences are understood:
# %C      Charset
# %c      Requires charset conversion ("n" or "c")
# %D      Deleted flag
# %d      Description (if none, falls back to %F)
# %e      MIME content-transfer-encoding
# %f      Filename
# %F      Filename in content-disposition header (if none, falls back to %f)
# %I      Disposition ("I" for inline, "A" for attachment)
# %m      Major MIME type
# %M      MIME subtype
# %n      Attachment number
# %Q      "Q", if MIME part qualifies for attachment counting
# %s      Size (see formatstrings-size)
# %T      Graphic tree characters
# %t      Tagged flag
# %u      Unlink (=to delete) flag
# %X      Number of qualifying MIME parts in this part and its children
#         (please see the "attachments" section for possible speed effects)
# %>X     Right justify the rest of the string and pad with character "X"
# %|X     Pad to the end of the line with character "X"
# %*X     Soft-fill with character "X" as pad
# 
# 
# For an explanation of "soft-fill", see the $index_format documentation.
# 
# 
# set attach_save_dir="./"
#
# Name: attach_save_dir
# Type: path
# Default: "./"
# 
# 
# The directory where attachments are saved.
# 
# 
# set attach_save_without_prompting=no
#
# Name: attach_save_without_prompting
# Type: boolean
# Default: no
# 
# 
# This variable, when set to true, will cause attachments to be saved to
# the 'attach_save_dir' location without prompting the user for the filename.
# 
# 
# 
# set attach_sep="\n"
#
# Name: attach_sep
# Type: string
# Default: "\n"
# 
# 
# The separator to add between attachments when operating (saving,
# printing, piping, etc) on a list of tagged attachments.
# 
# 
# set attach_split=yes
#
# Name: attach_split
# Type: boolean
# Default: yes
# 
# 
# If this variable is unset, when operating (saving, printing, piping,
# etc) on a list of tagged attachments, NeoMutt will concatenate the
# attachments and will operate on them as a single attachment. The
# $attach_sep separator is added after each attachment. When set,
# NeoMutt will operate on the attachments one by one.
# 
# 
# set attribution_intro="On %d, %n wrote:"
#
# Name: attribution_intro
# Type: string
# Default: "On %d, %n wrote:"
# 
# 
# This is the string that will precede a replied-to message which is
# quoted in the main body of the reply (this is the case when $include is
# set).
# 
# For a full listing of defined printf(3)-like sequences see the section
# on $index_format.  See also $attribution_locale.
# 
# 
# set attribution_locale=""
#
# Name: attribution_locale
# Type: string
# Default: ""
# 
# 
# The locale used by strftime(3) to format dates in the
# attribution strings.  Legal values are the strings your system
# accepts for the locale environment variable $LC_TIME.
# 
# This variable is to allow the attribution date format to be
# customized by recipient or folder using hooks.  By default, NeoMutt
# will use your locale environment, so there is no need to set
# this except to override that default.
# 
# Affected variables are: $attribution_intro, $attribution_trailer,
# $forward_attribution_intro, $forward_attribution_trailer, $indent_string.
# 
# 
# set attribution_trailer=""
#
# Name: attribution_trailer
# Type: string
# Default: ""
# 
# 
# Similar to the $attribution_intro variable, this is the string that will
# come after a replied-to message which is quoted in the main body of the reply
# (this is the case when $include is set).
# 
# For a full listing of defined printf(3)-like sequences see the section
# on $index_format.  See also $attribution_locale.
# 
# 
# set auto_edit=no
#
# Name: auto_edit
# Type: boolean
# Default: no
# 
# 
# When set along with $edit_headers, NeoMutt will skip the initial
# send-menu (prompting for subject and recipients) and allow you to
# immediately begin editing the body of your
# message.  The send-menu may still be accessed once you have finished
# editing the body of your message.
# 
# Note: when this option is set, you can't use send-hooks that depend
# on the recipients when composing a new (non-reply) message, as the initial
# list of recipients is empty.
# 
# Also see $fast_reply.
# 
# 
# set auto_subscribe=no
#
# Name: auto_subscribe
# Type: boolean
# Default: no
# 
# 
# When set, NeoMutt assumes the presence of a List-Post header
# means the recipient is subscribed to the list.  Unless the mailing list
# is in the "unsubscribe" or "unlist" lists, it will be added
# to the "subscribe" list.  Parsing and checking these things slows
# header reading down, so this option is disabled by default.
# 
# 
# set auto_tag=no
#
# Name: auto_tag
# Type: boolean
# Default: no
# 
# 
# When set, functions in the index menu which affect a message
# will be applied to all tagged messages (if there are any).  When
# unset, you must first use the <tag-prefix> function (bound to ";"
# by default) to make the next function apply to all tagged messages.
# 
# 
# set autocrypt=no
#
# Name: autocrypt
# Type: boolean
# Default: no
# 
# 
# When set, enables autocrypt, which provides
# passive encryption protection with keys exchanged via headers.
# See "autocryptdoc" for more details.
# (Autocrypt only)
# 
# 
# set autocrypt_acct_format="%4n %-30a %20p %10s"
#
# Name: autocrypt_acct_format
# Type: string
# Default: "%4n %-30a %20p %10s"
# 
# 
# This variable describes the format of the "autocrypt account" menu.
# The following printf(3)-style sequences are understood
# %a      email address
# %k      gpg keyid
# %n      current entry number
# %p      prefer-encrypt flag
# %s      status flag (active/inactive)
# %>X     right justify the rest of the string and pad with character "X"
# %|X     pad to the end of the line with character "X"
# %*X     soft-fill with character "X" as pad
# 
# 
# (Autocrypt only)
# 
# 
# set autocrypt_dir="~/.mutt/autocrypt"
#
# Name: autocrypt_dir
# Type: path
# Default: "~/.mutt/autocrypt"
# 
# 
# This variable sets where autocrypt files are stored, including the GPG
# keyring and SQLite database.  See "autocryptdoc" for more details.
# (Autocrypt only)
# 
# 
# set autocrypt_reply=yes
#
# Name: autocrypt_reply
# Type: boolean
# Default: yes
# 
# 
# When set, replying to an autocrypt email automatically
# enables autocrypt in the reply.  You may want to unset this if you're using
# the same key for autocrypt as normal web-of-trust, so that autocrypt
# isn't forced on for all encrypted replies.
# (Autocrypt only)
# 
# 
# set beep=yes
#
# Name: beep
# Type: boolean
# Default: yes
# 
# 
# When this variable is set, NeoMutt will beep when an error occurs.
# 
# 
# set beep_new=no
#
# Name: beep_new
# Type: boolean
# Default: no
# 
# 
# When this variable is set, NeoMutt will beep whenever it prints a message
# notifying you of new mail.  This is independent of the setting of the
# $beep variable.
# 
# 
# set bounce=ask-yes
#
# Name: bounce
# Type: quadoption
# Default: ask-yes
# 
# 
# Controls whether you will be asked to confirm bouncing messages.
# If set to yes you don't get asked if you want to bounce a
# message. Setting this variable to no is not generally useful,
# and thus not recommended, because you are unable to bounce messages.
# 
# 
# set bounce_delivered=yes
#
# Name: bounce_delivered
# Type: boolean
# Default: yes
# 
# 
# When this variable is set, NeoMutt will include Delivered-To headers when
# bouncing messages.  Postfix users may wish to unset this variable.
# 
# 
# set braille_friendly=no
#
# Name: braille_friendly
# Type: boolean
# Default: no
# 
# 
# When this variable is set, NeoMutt will place the cursor at the beginning
# of the current line in menus, even when the $arrow_cursor variable
# is unset, making it easier for blind persons using Braille displays to
# follow these menus.  The option is unset by default because many
# visual terminals don't permit making the cursor invisible.
# 
# 
# set browser_abbreviate_mailboxes=yes
#
# Name: browser_abbreviate_mailboxes
# Type: boolean
# Default: yes
# 
# 
# When this variable is set, NeoMutt will abbreviate mailbox
# names in the browser mailbox list, using '~' and '='
# shortcuts.
# 
# The default "alpha" setting of $browser_sort uses
# locale-based sorting (using strcoll(3)), which ignores some
# punctuation.  This can lead to some situations where the order
# doesn't make intuitive sense.  In those cases, it may be
# desirable to unset this variable.
# 
# 
# set browser_sort=alpha
#
# Name: browser_sort
# Type: sort order
# Default: alpha
# 
# 
# Specifies how to sort entries in the file browser.  By default, the
# entries are sorted alphabetically.  Valid values:
# - alpha (alphabetically by name)
# - count (total message count)
# - date
# - desc (description)
# - new (new message count)
# - size
# - unsorted
# 
# 
# You may optionally use the "reverse-" prefix to specify reverse sorting
# order (example: "set browser_sort=reverse-date").
# 
# The "unread" value is a synonym for "new".
# 
# 
# set browser_sort_dirs_first=no
#
# Name: browser_sort_dirs_first
# Type: boolean
# Default: no
# 
# 
# If this variable is set, the browser will group directories before
# files.
# 
# 
# set catchup_newsgroup=ask-yes
#
# Name: catchup_newsgroup
# Type: quadoption
# Default: ask-yes
# 
# 
# If this variable is set, NeoMutt will mark all articles in newsgroup
# as read when you quit the newsgroup (catchup newsgroup).
# 
# 
# set certificate_file="~/.mutt_certificates"
#
# Name: certificate_file
# Type: path
# Default: "~/.mutt_certificates"
# 
# 
# This variable specifies the file where the certificates you trust
# are saved. When an unknown certificate is encountered, you are asked
# if you accept it or not. If you accept it, the certificate can also
# be saved in this file and further connections are automatically
# accepted.
# 
# You can also manually add CA certificates in this file. Any server
# certificate that is signed with one of these CA certificates is
# also automatically accepted.
# 
# Example:
# set certificate_file=~/.neomutt/certificates
# 
# (OpenSSL and GnuTLS only)
# 
# 
# set change_folder_next=no
#
# Name: change_folder_next
# Type: boolean
# Default: no
# 
# 
# When this variable is set, the <change-folder> function
# mailbox suggestion will start at the next folder in your "mailboxes"
# list, instead of starting at the first folder in the list.
# 
# 
# set charset=""
#
# Name: charset
# Type: string
# Default: ""
# 
# 
# Character set your terminal uses to display and enter textual data.
# It is also the fallback for $send_charset.
# 
# Upon startup NeoMutt tries to derive this value from environment variables
# such as $LC_CTYPE or $LANG.
# 
# Note: It should only be set in case NeoMutt isn't able to determine the
# character set used correctly.
# 
# 
# set check_mbox_size=no
#
# Name: check_mbox_size
# Type: boolean
# Default: no
# 
# 
# When this variable is set, NeoMutt will use file size attribute instead of
# access time when checking for new mail in mbox and mmdf folders.
# 
# This variable is unset by default and should only be enabled when
# new mail detection for these folder types is unreliable or doesn't work.
# 
# Note that enabling this variable should happen before any "mailboxes"
# directives occur in configuration files regarding mbox or mmdf folders
# because NeoMutt needs to determine the initial new mail status of such a
# mailbox by performing a fast mailbox scan when it is defined.
# Afterwards the new mail status is tracked by file size changes.
# 
# 
# set check_new=yes
#
# Name: check_new
# Type: boolean
# Default: yes
# 
# 
# Note: this option only affects maildir and MH style
# mailboxes.
# 
# When set, NeoMutt will check for new mail delivered while the
# mailbox is open.  Especially with MH mailboxes, this operation can
# take quite some time since it involves scanning the directory and
# checking each file to see if it has already been looked at.  If
# this variable is unset, no check for new mail is performed
# while the mailbox is open.
# 
# 
# set collapse_all=no
#
# Name: collapse_all
# Type: boolean
# Default: no
# 
# 
# When set, NeoMutt will collapse all threads when entering a folder.
# 
# 
# set collapse_flagged=yes
#
# Name: collapse_flagged
# Type: boolean
# Default: yes
# 
# 
# When unset, NeoMutt will not collapse a thread if it contains any
# flagged messages.
# 
# 
# set collapse_unread=yes
#
# Name: collapse_unread
# Type: boolean
# Default: yes
# 
# 
# When unset, NeoMutt will not collapse a thread if it contains any
# unread messages.
# 
# 
# set color_directcolor=no
#
# Name: color_directcolor
# Type: boolean
# Default: no
# 
# 
# When set, NeoMutt will use and allow 24bit colours (aka truecolor aka
# directcolor).  For colours to work properly support from the terminal is
# required as well as a properly set TERM environment variable advertising the
# terminals directcolor capability, e.g. "TERM=xterm-direct".
# 
# NeoMutt tries to detect whether the terminal supports 24bit colours and
# enables this variable if it does.  If this fails for some reason, you can
# force 24bit colours by setting this variable manually.  You may also try to
# force a certain TERM environment variable by starting NeoMutt from
# a terminal as follows (this results in wrong colours if the terminal does
# not implement directcolors):
# TERM=xterm-direct neomutt
# 
# Note: This variable must be set before using any `color` commands.
# 
# 
# 
# set compose_confirm_detach_first=yes
#
# Name: compose_confirm_detach_first
# Type: boolean
# Default: yes
# 
# 
# When set, NeoMutt will prompt for confirmation when trying to use
# <detach-file> on the first entry in the compose menu. This is to help
# prevent irreversible loss of the typed message by accidentally hitting 'D' in
# the menu.
# 
# Note: NeoMutt only prompts for the first entry.  It doesn't keep track of
# which message is the typed message if the entries are reordered, or if the
# first entry was already deleted.
# 
# 
# set compose_format="-- NeoMutt: Compose  [Approx. msg size: %l   Atts: %a]%>-"
#
# Name: compose_format
# Type: string
# Default: "-- NeoMutt: Compose  [Approx. msg size: %l   Atts: %a]%>-"
# 
# 
# Controls the format of the status line displayed in the "compose"
# menu.  This string is similar to $status_format, but has its own
# set of printf(3)-like sequences:
# %a      Total number of attachments
# %h      Local hostname
# %l      Approximate size (in bytes) of the current message (see formatstrings-size)
# %v      NeoMutt version string
# %>X     right justify the rest of the string and pad with character "X"
# %|X     pad to the end of the line with character "X"
# %*X     soft-fill with character "X" as pad
# 
# 
# See the text describing the $status_format option for more
# information on how to set $compose_format.
# 
# 
# set compose_preview_min_rows=5
#
# Name: compose_preview_min_rows
# Type: number
# Default: 5
# 
# 
# This variable specifies the minimum number of rows that have to be
# available for the message preview window to shown.
# 
# 
# set compose_preview_above_attachments=no
#
# Name: compose_preview_above_attachments
# Type: boolean
# Default: no
# 
# 
# Show the message preview above the attachments list.
# By default it is shown below it.
# 
# 
# set compose_show_preview=yes
#
# Name: compose_show_preview
# Type: boolean
# Default: yes
# 
# 
# When set, Neomutt will display a preview of message in the compose view.
# 
# 
# set compose_show_user_headers=yes
#
# Name: compose_show_user_headers
# Type: boolean
# Default: yes
# 
# 
# When set, Neomutt will display user-defined headers (set via my_hdr
# or from editing with edit-headers).
# 
# 
# set config_charset=""
#
# Name: config_charset
# Type: string
# Default: ""
# 
# 
# When defined, NeoMutt will recode commands in rc files from this
# encoding to the current character set as specified by $charset
# and aliases written to $alias_file from the current character set.
# 
# Please note that if setting $charset it must be done before
# setting $config_charset.
# 
# Recoding should be avoided as it may render unconvertible
# characters as question marks which can lead to undesired
# side effects (for example in regular expressions).
# 
# 
# set confirm_append=yes
#
# Name: confirm_append
# Type: boolean
# Default: yes
# 
# 
# When set, NeoMutt will prompt for confirmation when appending messages to
# an existing mailbox.
# 
# 
# set confirm_create=yes
#
# Name: confirm_create
# Type: boolean
# Default: yes
# 
# 
# When set, NeoMutt will prompt for confirmation when saving messages to a
# mailbox which does not yet exist before creating it.
# 
# 
# set content_type="text/plain"
#
# Name: content_type
# Type: string
# Default: "text/plain"
# 
# 
# Sets the default Content-Type for the body of newly composed messages.
# 
# 
# set copy=yes
#
# Name: copy
# Type: quadoption
# Default: yes
# 
# 
# This variable controls whether or not copies of your outgoing messages
# will be saved for later references.  Also see $record,
# $save_name, $force_name and "fcc-hook".
# 
# 
# set copy_decode_weed=no
#
# Name: copy_decode_weed
# Type: boolean
# Default: no
# 
# 
# Controls whether NeoMutt will weed headers when invoking the
# <decode-copy> or <decode-save> functions.
# 
# 
# set count_alternatives=no
#
# Name: count_alternatives
# Type: boolean
# Default: no
# 
# 
# When set, NeoMutt will recurse inside multipart/alternatives while
# performing attachment searching and counting(see attachments).
# 
# Traditionally, multipart/alternative parts have simply represented
# different encodings of the main content of the email.  Unfortunately,
# some mail clients have started to place email attachments inside
# one of alternatives.  Setting this will allow NeoMutt to find
# and count matching attachments hidden there, and include them
# in the index via %X or through ~X pattern matching.
# 
# 
# set crypt_auto_encrypt=no
#
# Name: crypt_auto_encrypt
# Type: boolean
# Default: no
# 
# 
# Setting this variable will cause NeoMutt to always attempt to PGP
# encrypt outgoing messages.  This is probably only useful in
# connection to the "send-hook" command.  It can be overridden
# by use of the pgp menu, when encryption is not required or
# signing is requested as well.  If $smime_is_default is set,
# then OpenSSL is used instead to create S/MIME messages and
# settings can be overridden by use of the smime menu instead.
# (Crypto only)
# 
# 
# set crypt_auto_pgp=yes
#
# Name: crypt_auto_pgp
# Type: boolean
# Default: yes
# 
# 
# This variable controls whether or not NeoMutt may automatically enable
# PGP encryption/signing for messages.  See also $crypt_auto_encrypt,
# $crypt_reply_encrypt,
# $crypt_auto_sign, $crypt_reply_sign and $smime_is_default.
# 
# 
# set crypt_auto_sign=no
#
# Name: crypt_auto_sign
# Type: boolean
# Default: no
# 
# 
# Setting this variable will cause NeoMutt to always attempt to
# cryptographically sign outgoing messages.  This can be overridden
# by use of the pgp menu, when signing is not required or
# encryption is requested as well. If $smime_is_default is set,
# then OpenSSL is used instead to create S/MIME messages and settings can
# be overridden by use of the smime menu instead of the pgp menu.
# (Crypto only)
# 
# 
# set crypt_auto_smime=yes
#
# Name: crypt_auto_smime
# Type: boolean
# Default: yes
# 
# 
# This variable controls whether or not NeoMutt may automatically enable
# S/MIME encryption/signing for messages. See also $crypt_auto_encrypt,
# $crypt_reply_encrypt,
# $crypt_auto_sign, $crypt_reply_sign and $smime_is_default.
# 
# 
# set crypt_chars="SPsK "
#
# Name: crypt_chars
# Type: character string
# Default: "SPsK "
# 
# 
# Controls the characters used in cryptography flags.
# Character Default Description
# 1       S The mail is signed, and the signature is successfully verified.
# 2       P The mail is PGP encrypted.
# 3       s The mail is signed.
# 4       K The mail contains a PGP public key.
# 5       <space> The mail has no crypto info.
# 
# 
# set crypt_confirm_hook=yes
#
# Name: crypt_confirm_hook
# Type: boolean
# Default: yes
# 
# 
# If set, then you will be prompted for confirmation of keys when using
# the crypt-hook command.  If unset, no such confirmation prompt will
# be presented.  This is generally considered unsafe, especially where
# typos are concerned.
# 
# 
# set crypt_opportunistic_encrypt=no
#
# Name: crypt_opportunistic_encrypt
# Type: boolean
# Default: no
# 
# 
# Setting this variable will cause NeoMutt to automatically enable and
# disable encryption, based on whether all message recipient keys
# can be located by NeoMutt.
# 
# When this option is enabled, NeoMutt will enable/disable encryption
# each time the TO, CC, and BCC lists are edited.  If
# $edit_headers is set, NeoMutt will also do so each time the message
# is edited.
# 
# While this is set, encryption can't be manually enabled/disabled.
# The pgp or smime menus provide a selection to temporarily disable
# this option for the current message.
# 
# If $crypt_auto_encrypt or $crypt_reply_encrypt enable encryption for
# a message, this option will be disabled for that message.  It can
# be manually re-enabled in the pgp or smime menus.
# (Crypto only)
# 
# 
# set crypt_opportunistic_encrypt_strong_keys=no
#
# Name: crypt_opportunistic_encrypt_strong_keys
# Type: boolean
# Default: no
# 
# 
# When set, this modifies the behavior of $crypt_opportunistic_encrypt
# to only search for "strong keys", that is, keys with full validity
# according to the web-of-trust algorithm.  A key with marginal or no
# validity will not enable opportunistic encryption.
# 
# For S/MIME, the behavior depends on the backend.  Classic S/MIME will
# filter for certificates with the 't'(trusted) flag in the .index file.
# The GPGME backend will use the same filters as with OpenPGP, and depends
# on GPGME's logic for assigning the GPGME_VALIDITY_FULL and
# GPGME_VALIDITY_ULTIMATE validity flag.
# 
# 
# set crypt_protected_headers_read=yes
#
# Name: crypt_protected_headers_read
# Type: boolean
# Default: yes
# 
# 
# When set, NeoMutt will display protected headers ("Memory Hole") in the pager,
# When set, NeoMutt will display protected headers in the pager,
# and will update the index and header cache with revised headers.
# 
# Protected headers are stored inside the encrypted or signed part of an
# an email, to prevent disclosure or tampering.
# For more information see https://github.com/autocrypt/protected-headers
# Currently NeoMutt only supports the Subject header.
# 
# Encrypted messages using protected headers often substitute the exposed
# Subject header with a dummy value (see $crypt_protected_headers_subject).
# NeoMutt will update its concept of the correct subject after the
# message is opened, i.e. via the <display-message> function.
# If you reply to a message before opening it, NeoMutt will end up using
# the dummy Subject header, so be sure to open such a message first.
# (Crypto only)
# 
# 
# set crypt_protected_headers_save=no
#
# Name: crypt_protected_headers_save
# Type: boolean
# Default: no
# 
# 
# When $crypt_protected_headers_read is set, and a message with a
# protected Subject is opened, NeoMutt will save the updated Subject
# into the header cache by default.  This allows searching/limiting
# based on the protected Subject header if the mailbox is
# re-opened, without having to re-open the message each time.
# However, for mbox/mh mailbox types, or if header caching is not
# set up, you would need to re-open the message each time the
# mailbox was reopened before you could see or search/limit on the
# protected subject again.
# 
# When this variable is set, NeoMutt additionally saves the protected
# Subject back in the clear-text message headers.  This
# provides better usability, but with the tradeoff of reduced
# security.  The protected Subject header, which may have
# previously been encrypted, is now stored in clear-text in the
# message headers.  Copying the message elsewhere, via NeoMutt or
# external tools, could expose this previously encrypted data.
# Please make sure you understand the consequences of this before
# you enable this variable.
# (Crypto only)
# 
# 
# set crypt_protected_headers_subject="..."
#
# Name: crypt_protected_headers_subject
# Type: string
# Default: "..."
# 
# 
# When $crypt_protected_headers_write is set, and the message is marked
# for encryption, this will be substituted into the Subject field in the
# message headers.
# 
# To prevent a subject from being substituted, unset this variable, or set it
# to the empty string.
# (Crypto only)
# 
# 
# set crypt_protected_headers_weed=no
#
# Name: crypt_protected_headers_weed
# Type: boolean
# Default: no
# 
# 
# Controls whether NeoMutt will weed protected header fields.
# (Crypto only)
# 
# 
# set crypt_protected_headers_write=yes
#
# Name: crypt_protected_headers_write
# Type: boolean
# Default: yes
# 
# 
# When set, NeoMutt will generate protected headers for signed and encrypted
# emails.
# 
# Protected headers are stored inside the encrypted or signed part of an
# an email, to prevent disclosure or tampering.
# For more information see https://github.com/autocrypt/protected-headers
# 
# Currently NeoMutt only supports the Subject header.
# (Crypto only)
# 
# 
# set crypt_reply_encrypt=yes
#
# Name: crypt_reply_encrypt
# Type: boolean
# Default: yes
# 
# 
# If set, automatically PGP or OpenSSL encrypt replies to messages which are
# encrypted.
# (Crypto only)
# 
# 
# set crypt_reply_sign=no
#
# Name: crypt_reply_sign
# Type: boolean
# Default: no
# 
# 
# If set, automatically PGP or OpenSSL sign replies to messages which are
# signed.
# 
# Note: this does not work on messages that are encrypted
# and signed!
# (Crypto only)
# 
# 
# set crypt_reply_sign_encrypted=no
#
# Name: crypt_reply_sign_encrypted
# Type: boolean
# Default: no
# 
# 
# If set, automatically PGP or OpenSSL sign replies to messages
# which are encrypted. This makes sense in combination with
# $crypt_reply_encrypt, because it allows you to sign all
# messages which are automatically encrypted.  This works around
# the problem noted in $crypt_reply_sign, that NeoMutt is not able
# to find out whether an encrypted message is also signed.
# (Crypto only)
# 
# 
# set crypt_encryption_info=yes
#
# Name: crypt_encryption_info
# Type: boolean
# Default: yes
# 
# 
# If set, NeoMutt will include an informative block
# before an encrypted part,
# with details about the encryption.
# (Crypto only)
# 
# 
# set crypt_timestamp=yes
#
# Name: crypt_timestamp
# Type: boolean
# Default: yes
# 
# 
# If set, NeoMutt will include a time stamp in the lines surrounding
# PGP or S/MIME output, so spoofing such lines is more difficult.
# If you are using colors to mark these lines, and rely on these,
# you may unset this setting.
# (Crypto only)
# 
# 
# set crypt_use_gpgme=yes
#
# Name: crypt_use_gpgme
# Type: boolean
# Default: yes
# 
# 
# This variable controls the use of the GPGME-enabled crypto backends.
# If it is set and NeoMutt was built with GPGME support, the gpgme code for
# S/MIME and PGP will be used instead of the classic code.  Note that
# you need to set this option in .neomuttrc; it won't have any effect when
# used interactively.
# 
# Note that the GPGME backend does not support creating old-style inline
# (traditional) PGP encrypted or signed messages (see $pgp_auto_inline).
# 
# 
# set crypt_use_pka=no
#
# Name: crypt_use_pka
# Type: boolean
# Default: no
# 
# 
# Controls whether NeoMutt uses PKA
# (see http://www.g10code.de/docs/pka-intro.de.pdf) during signature
# verification (only supported by the GPGME backend).
# 
# 
# set crypt_verify_sig=yes
#
# Name: crypt_verify_sig
# Type: quadoption
# Default: yes
# 
# 
# If "yes", always attempt to verify PGP or S/MIME signatures.
# If "ask-*", ask whether or not to verify the signature.
# If "no", never attempt to verify cryptographic signatures.
# (Crypto only)
# 
# 
# set date_format="!%a, %b %d, %Y at %I:%M:%S%p %Z"
#
# Name: date_format
# Type: string
# Default: "!%a, %b %d, %Y at %I:%M:%S%p %Z"
# 
# 
# Instead of using $date_format it is encouraged to use "%[fmt]"
# directly in the corresponding format strings, where "fmt" is the
# value of $date_format.  This allows for a more fine grained control
# of the different menu needs.
# 
# This variable controls the format of the date printed by the "%d"
# sequence in $index_format.  This is passed to the strftime(3)
# function to process the date, see the man page for the proper syntax.
# 
# Unless the first character in the string is a bang ("!"), the month
# and week day names are expanded according to the locale.
# If the first character in the string is a
# bang, the bang is discarded, and the month and week day names in the
# rest of the string are expanded in the C locale (that is in US
# English).
# 
# Format strings using this variable are:
# 
# UI: $folder_format, $index_format, $mailbox_folder_format,
# $message_format
# Composing: $attribution_intro, $forward_attribution_intro,
# $forward_attribution_trailer, $forward_format, $indent_string.
# 
# 
# 
# set debug_file="~/.neomuttdebug"
#
# Name: debug_file
# Type: path
# Default: "~/.neomuttdebug"
# 
# 
# Debug logging is controlled by the variables $debug_file and $debug_level.
# $debug_file specifies the root of the filename.  NeoMutt will add "0" to the end.
# Each time NeoMutt is run with logging enabled, the log files are rotated.
# A maximum of five log files are kept, numbered 0 (most recent) to 4 (oldest).
# 
# This option can be enabled on the command line, "neomutt -l mylog"
# 
# See also: $debug_level
# 
# 
# set debug_level=0
#
# Name: debug_level
# Type: number
# Default: 0
# 
# 
# Debug logging is controlled by the variables $debug_file and $debug_level.
# 
# The debug level controls how much information is saved to the log file.
# If you have a problem with NeoMutt, then enabling logging may help find the cause.
# Levels 1-3 will usually provide enough information for writing a bug report.
# Levels 4,5 will be extremely verbose.
# 
# Warning: Logging at high levels may save private information to the file.
# 
# This option can be enabled on the command line, "neomutt -d 2"
# 
# See also: $debug_file
# 
# 
# set default_hook="~f %s !~P | (~P ~C %s)"
#
# Name: default_hook
# Type: string
# Default: "~f %s !~P | (~P ~C %s)"
# 
# 
# This variable controls how some hooks are interpreted if their pattern is a
# plain string or a regex. i.e. they don't contain a pattern, like ~f
# 
# The hooks are: fcc-hook, fcc-save-hook, index-format-hook, message-hook,
# reply-hook, save-hook, send-hook and send2-hook.
# 
# The hooks are expanded when they are declared, so a hook will be interpreted
# according to the value of this variable at the time the hook is declared.
# 
# The default value matches if the message is either from a user matching the
# regular expression given, or if it is from you (if the from address matches
# "alternates") and is to or cc'ed to a user matching the given regular
# expression.
# 
# 
# set delete=ask-yes
#
# Name: delete
# Type: quadoption
# Default: ask-yes
# 
# 
# Controls whether or not messages are really deleted when closing or
# synchronizing a mailbox.  If set to yes, messages marked for
# deleting will automatically be purged without prompting.  If set to
# no, messages marked for deletion will be kept in the mailbox.
# 
# 
# set delete_untag=yes
#
# Name: delete_untag
# Type: boolean
# Default: yes
# 
# 
# If this option is set, NeoMutt will untag messages when marking them
# for deletion.  This applies when you either explicitly delete a message,
# or when you save it to another folder.
# 
# 
# set devel_security=no
#
# Name: devel_security
# Type: boolean
# Default: no
# 
# 
# If this option is set, NeoMutt will enable the Security development features.
# See: https://github.com/neomutt/neomutt/discussions/4251
# 
# 
# set digest_collapse=yes
#
# Name: digest_collapse
# Type: boolean
# Default: yes
# 
# 
# If this option is set, NeoMutt's received-attachments menu will not show the subparts of
# individual messages in a multipart/digest.  To see these subparts, press "v" on that menu.
# 
# 
# set display_filter=""
#
# Name: display_filter
# Type: command
# Default: ""
# 
# 
# When set, specifies a command used to filter messages.  When a message
# is viewed it is passed as standard input to $display_filter, and the
# filtered message is read from the standard output.
# 
# When preparing the message, NeoMutt inserts some escape sequences into the
# text.  They are of the form: <esc>]9;XXX<bel> where "XXX" is a random
# 64-bit number.
# 
# If these escape sequences interfere with your filter, they can be removed
# using a tool like ansifilter or sed 's/^\x1b]9;[0-9]\+\x7//'
# 
# If they are removed, then PGP and MIME headers will no longer be coloured.
# This can be fixed by adding this to your config:
# color body magenta default '^\[-- .* --\]$'.
# 
# 
# set dsn_notify=""
#
# Name: dsn_notify
# Type: string
# Default: ""
# 
# 
# This variable sets the request for when notification is returned.  The
# string consists of a comma separated list (no spaces!) of one or more
# of the following: never, to never request notification,
# failure, to request notification on transmission failure,
# delay, to be notified of message delays, success, to be
# notified of successful transmission.
# 
# Example:
# set dsn_notify="failure,delay"
# 
# Note: when using $sendmail for delivery, you should not enable
# this unless you are either using Sendmail 8.8.x or greater or a MTA
# providing a sendmail(1)-compatible interface supporting the -N option
# for DSN. For SMTP delivery, DSN support is auto-detected so that it
# depends on the server whether DSN will be used or not.
# 
# 
# set dsn_return=""
#
# Name: dsn_return
# Type: string
# Default: ""
# 
# 
# This variable controls how much of your message is returned in DSN
# messages.  It may be set to either hdrs to return just the
# message header, or full to return the full message.
# 
# Example:
# set dsn_return=hdrs
# 
# Note: when using $sendmail for delivery, you should not enable
# this unless you are either using Sendmail 8.8.x or greater or a MTA
# providing a sendmail(1)-compatible interface supporting the -R option
# for DSN. For SMTP delivery, DSN support is auto-detected so that it
# depends on the server whether DSN will be used or not.
# 
# 
# set duplicate_threads=yes
#
# Name: duplicate_threads
# Type: boolean
# Default: yes
# 
# 
# This variable controls whether NeoMutt, when $sort is set to threads, threads
# messages with the same Message-Id together.  If it is set, it will indicate
# that it thinks they are duplicates of each other with an equals sign
# in the thread tree.
# 
# 
# set edit_headers=no
#
# Name: edit_headers
# Type: boolean
# Default: no
# 
# 
# This option allows you to edit the header of your outgoing messages
# along with the body of your message.
# 
# Although the compose menu may have localized header labels, the
# labels passed to your editor will be standard RFC2822 headers,
# (e.g. To:, Cc:, Subject:).  Headers added in your editor must
# also be RFC2822 headers, or one of the pseudo headers listed in
# "edit-header".  NeoMutt will not understand localized header
# labels, just as it would not when parsing an actual email.
# 
# Note that changes made to the References: and Date: headers are
# ignored for interoperability reasons.
# 
# 
# set editor=""
#
# Name: editor
# Type: command
# Default: ""
# 
# 
# This variable specifies which editor is used by NeoMutt.
# It defaults to the value of the $VISUAL, or $EDITOR, environment
# variable, or to the string "vi" if neither of those are set.
# 
# The $editor string may contain a %s escape, which will be replaced by the name
# of the file to be edited.  If the %s escape does not appear in $editor, a
# space and the name to be edited are appended.
# 
# The resulting string is then executed by running
# sh -c 'string'
# 
# where string is the expansion of $editor described above.
# 
# 
# set empty_subject="Re: your mail"
#
# Name: empty_subject
# Type: string
# Default: "Re: your mail"
# 
# 
# This variable specifies the subject to be used when replying to an email
# with an empty subject.  It defaults to "Re: your mail".
# 
# 
# set encode_from=no
#
# Name: encode_from
# Type: boolean
# Default: no
# 
# 
# When set, NeoMutt will quoted-printable encode messages when
# they contain the string "From " (note the trailing space) in the beginning of a line.
# This is useful to avoid the tampering certain mail delivery and transport
# agents tend to do with messages (in order to prevent tools from
# misinterpreting the line as a mbox message separator).
# 
# 
# set envelope_from_address=""
#
# Name: envelope_from_address
# Type: e-mail address
# Default: ""
# 
# 
# Manually sets the envelope sender for outgoing messages.
# This value is ignored if $use_envelope_from is unset.
# 
# 
# set external_search_command=""
#
# Name: external_search_command
# Type: command
# Default: ""
# 
# 
# If set, contains the name of the external program used by "~I" patterns.
# This will usually be a wrapper script around mairix, mu, or similar
# indexers other than notmuch (for which there is optional special support).
# 
# Here is an example how it works.  Let's assume $external_search_command
# is set to "mairix_filter", and mairix_filter is a script which
# runs the old but well loved mairix indexer with the arguments
# given to mairix_filter, in the "raw" mode of mairix, producing
# on the standard output a list of Message-IDs, one per line.
# 
# If possible, it also filters down the results coming from mairix
# such that only messages in the current folder remain.  It can do
# this because it gets a hidden first argument which is the path
# to the folder.
# (This can be the type of clean and simple script called a one-liner.)
# 
# Now if NeoMutt gets a limit or tag command followed by the pattern
# "~I '-t s:bleeping='", mairix_filter runs mairix with the
# arguments from inside the quotes (the quotes are needed because
# of the space after "-t"), mairix finds all messages with
# "bleeping" in the Subject plus all messages sharing threads
# with these and outputs their file names, and mairix_filter
# translates the file names into Message-IDs.  Finally, NeoMutt
# reads the Message-IDs and targets the matching messages with the
# command given to it.
# 
# You, the user, still have to rewrite the mairix_filter script to
# match the behavior of your indexer, but this should help users
# of indexers other than notmuch to integrate them cleanly with NeoMutt.
# 
# 
# set fast_reply=no
#
# Name: fast_reply
# Type: boolean
# Default: no
# 
# 
# When set, the initial prompt for recipients (to, cc, bcc) and
# subject are skipped when the relevant information is already provided.
# These cases include replying to messages and passing the relevant
# command line arguments. The initial prompt for recipients
# is also skipped when composing a new message to the current message sender,
# while the initial prompt for subject is also skipped when forwarding messages.
# 
# Note: this variable has no effect when the $auto_edit
# variable is set.
# 
# See also: $auto_edit, $edit_headers, $ask_cc, $ask_bcc
# 
# 
# set fcc_attach=yes
#
# Name: fcc_attach
# Type: quadoption
# Default: yes
# 
# 
# This variable controls whether or not attachments on outgoing messages
# are saved along with the main body of your message.
# 
# Note: $fcc_before_send forces the default (set) behavior of this option.
# 
# 
# set fcc_before_send=no
#
# Name: fcc_before_send
# Type: boolean
# Default: no
# 
# 
# When this variable is set, FCCs will occur before sending
# the message.  Before sending, the message cannot be manipulated,
# so it will be stored the exact same as sent:
# $fcc_attach and $fcc_clear will be ignored (using their default
# values).
# 
# When unset, the default, FCCs will occur after sending.
# Variables $fcc_attach and $fcc_clear will be respected, allowing
# it to be stored without attachments or encryption/signing if
# desired.
# 
# 
# set fcc_clear=no
#
# Name: fcc_clear
# Type: boolean
# Default: no
# 
# 
# When this variable is set, FCCs will be stored unencrypted and
# unsigned, even when the actual message is encrypted and/or
# signed.
# 
# Note: $fcc_before_send forces the default (unset) behavior of this option.
# (PGP only)
# 
# See also $pgp_self_encrypt, $smime_self_encrypt
# 
# 
# set flag_chars="*!DdrONon- "
#
# Name: flag_chars
# Type: character string
# Default: "*!DdrONon- "
# 
# 
# Controls the characters used in several flags.
# Character Default Description
# 1       * The mail is tagged.
# 2       ! The mail is flagged as important.
# 3       D The mail is marked for deletion.
# 4       d The mail has attachments marked for deletion.
# 5       r The mail has been replied to.
# 6       O The mail is Old (Unread but seen).
# 7       N The mail is New (Unread but not seen).
# 8       o The mail thread is Old (Unread but seen).
# 9       n The mail thread is New (Unread but not seen).
# 10      - The mail is read - %S expando.
# 11      <space> The mail is read - %Z expando.
# 
# 
# set flag_safe=no
#
# Name: flag_safe
# Type: boolean
# Default: no
# 
# 
# If set, flagged messages can't be deleted.
# 
# 
# set folder="~/Mail"
#
# Name: folder
# Type: mailbox
# Default: "~/Mail"
# 
# 
# Specifies the default location of your mailboxes.  A "+" or "=" at the
# beginning of a pathname will be expanded to the value of this
# variable.  Note that if you change this variable (from the default)
# value you need to make sure that the assignment occurs before
# you use "+" or "=" for any other variables since expansion takes place
# when handling the "mailboxes" command.
# 
# 
# set folder_format="%2C %t %N %F %2l %-8.8u %-8.8g %8s %d %i"
#
# Name: folder_format
# Type: string
# Default: "%2C %t %N %F %2l %-8.8u %-8.8g %8s %d %i"
# 
# 
# This variable allows you to customize the file browser display to your
# personal taste.  This string is similar to $index_format, but has
# its own set of printf(3)-like sequences:
# %a        Alert: 1 if user is notified of new mail
# %C        Current file number
# %d        Date/time folder was last modified
# %D        Date/time folder was last modified using $date_format.
#         It is encouraged to use "%[fmt]" instead, where "fmt" is
#         the value of $date_format.
# %f        Filename ("/" is appended to directory names,
#         "@" to symbolic links and "*" to executable files)
# %F        File permissions
# %g        Group name (or numeric gid, if missing)
# %i        Description of the folder
# %l        Number of hard links
# %m      * Number of messages in the mailbox
# %n      * Number of unread messages in the mailbox
# %N        "N" if mailbox has new mail, " " (space) otherwise
# %p        Poll: 1 if Mailbox is checked for new mail
# %s        Size in bytes (see formatstrings-size)
# %t        "*" if the file is tagged, blank otherwise
# %u        Owner name (or numeric uid, if missing)
# %[fmt]    Date/time folder was last modified using an strftime(3) expression
# %>X       Right justify the rest of the string and pad with character "X"
# %|X       Pad to the end of the line with character "X"
# %*X       Soft-fill with character "X" as pad
# 
# 
# For an explanation of "soft-fill", see the $index_format documentation.
# 
# * = can be optionally printed if nonzero
# 
# %m, %n, and %N only work for monitored mailboxes.
# %m requires $mail_check_stats to be set.
# %n requires $mail_check_stats to be set (except for IMAP mailboxes).
# 
# 
# set followup_to=yes
#
# Name: followup_to
# Type: boolean
# Default: yes
# 
# 
# Controls whether or not the "Mail-Followup-To:" header field is
# generated when sending mail.  When set, NeoMutt will generate this
# field when you are replying to a known mailing list, specified with
# the "subscribe" or "lists" commands.
# 
# This field has two purposes.  First, preventing you from
# receiving duplicate copies of replies to messages which you send
# to mailing lists, and second, ensuring that you do get a reply
# separately for any messages sent to known lists to which you are
# not subscribed.
# 
# The header will contain only the list's address
# for subscribed lists, and both the list address and your own
# email address for unsubscribed lists.  Without this header, a
# group reply to your message sent to a subscribed list will be
# sent to both the list and your address, resulting in two copies
# of the same email for you.
# 
# 
# set followup_to_poster=ask-yes
#
# Name: followup_to_poster
# Type: quadoption
# Default: ask-yes
# 
# 
# If this variable is set and the keyword "poster" is present in
# Followup-To header, follow-up to newsgroup function is not
# permitted.  The message will be mailed to the submitter of the
# message via mail.
# 
# 
# set force_name=no
#
# Name: force_name
# Type: boolean
# Default: no
# 
# 
# This variable is similar to $save_name, except that NeoMutt will
# store a copy of your outgoing message by the username of the address
# you are sending to even if that mailbox does not exist.
# 
# Also see the $record variable.
# 
# 
# set forward_attachments=ask-yes
#
# Name: forward_attachments
# Type: quadoption
# Default: ask-yes
# 
# 
# When forwarding inline (i.e. $mime_forward unset or
# answered with "no" and $forward_decode set), attachments
# which cannot be decoded in a reasonable manner will be attached
# to the newly composed message if this quadoption is set or
# answered with "yes".
# 
# 
# set forward_attribution_intro="----- Forwarded message from %f -----"
#
# Name: forward_attribution_intro
# Type: string
# Default: "----- Forwarded message from %f -----"
# 
# 
# This is the string that will precede a message which has been forwarded
# in the main body of a message (when $mime_forward is unset).
# For a full listing of defined printf(3)-like sequences see
# the section on $index_format.  See also $attribution_locale.
# 
# 
# set forward_attribution_trailer="----- End forwarded message -----"
#
# Name: forward_attribution_trailer
# Type: string
# Default: "----- End forwarded message -----"
# 
# 
# This is the string that will follow a message which has been forwarded
# in the main body of a message (when $mime_forward is unset).
# For a full listing of defined printf(3)-like sequences see
# the section on $index_format.  See also $attribution_locale.
# 
# 
# set forward_decode=yes
#
# Name: forward_decode
# Type: boolean
# Default: yes
# 
# 
# Controls the decoding of complex MIME messages into text/plain when
# forwarding a message.  The message header is also RFC2047 decoded.
# This variable is only used, if $mime_forward is unset,
# otherwise $mime_forward_decode is used instead.
# 
# 
# set forward_decrypt=yes
#
# Name: forward_decrypt
# Type: boolean
# Default: yes
# 
# 
# Controls the handling of encrypted messages when forwarding a message.
# When set, the outer layer of encryption is stripped off.  This
# variable is only used if $mime_forward is set and
# $mime_forward_decode is unset.
# 
# 
# set forward_edit=yes
#
# Name: forward_edit
# Type: quadoption
# Default: yes
# 
# 
# This quadoption controls whether or not the user is automatically
# placed in the editor when forwarding messages.  For those who always want
# to forward with no modification, use a setting of "no".
# 
# 
# set forward_format="[%a: %s]"
#
# Name: forward_format
# Type: string
# Default: "[%a: %s]"
# 
# 
# This variable controls the default subject when forwarding a message.
# It uses the same format sequences as the $index_format variable.
# 
# 
# set forward_quote=no
#
# Name: forward_quote
# Type: boolean
# Default: no
# 
# 
# When set, forwarded messages included in the main body of the
# message (when $mime_forward is unset) will be quoted using
# $indent_string.
# 
# 
# set forward_references=no
#
# Name: forward_references
# Type: boolean
# Default: no
# 
# 
# When set, forwarded messages set the "In-Reply-To:" and
# "References:" headers in the same way as normal replies would. Hence the
# forwarded message becomes part of the original thread instead of starting
# a new one.
# 
# 
# set from=""
#
# Name: from
# Type: e-mail address
# Default: ""
# 
# 
# When set, this variable contains a default "from" address.  It
# can be overridden using "my_hdr" (including from a "send-hook") and
# $reverse_name.  This variable is ignored if $use_from is unset.
# 
# If not specified, then it may be read from the environment variable $EMAIL.
# 
# 
# set from_chars=""
#
# Name: from_chars
# Type: character string
# Default: ""
# 
# 
# Controls the character used to prefix the %F and %L fields in the
# index.
# Character Description
# 1       Mail is written by you and has a To address, or has a known mailing list in the To address.
# 2       Mail is written by you and has a Cc address, or has a known mailing list in the Cc address.
# 3       Mail is written by you and has a Bcc address.
# 4       All remaining cases.
# 
# 
# If this is empty or unset (default), the traditional long "To ",
# "Cc " and "Bcc " prefixes are used.  If set but too short to
# include a character for a particular case, a single space will be
# prepended to the field.  To prevent any prefix at all from being
# added in a particular case, use the special value CR (aka ^M)
# for the corresponding character.
# 
# This slightly odd interface is necessitated by NeoMutt's handling of
# string variables; one can't tell a variable that is unset from one
# that is set to the empty string.
# 
# 
# set gecos_mask="^[^,]*"
#
# Name: gecos_mask
# Type: regular expression
# Default: "^[^,]*"
# 
# 
# A regular expression used by NeoMutt to parse the GECOS field of a password
# entry when expanding the alias.  The default value
# will return the string up to the first "," encountered.
# If the GECOS field contains a string like "lastname, firstname" then you
# should set it to ".*".
# 
# This can be useful if you see the following behavior: you address an e-mail
# to user ID "stevef" whose full name is "Steve Franklin".  If NeoMutt expands
# "stevef" to '"Franklin" stevef@foo.bar' then you should set the $gecos_mask to
# a regular expression that will match the whole name so NeoMutt will expand
# "Franklin" to "Franklin, Steve".
# 
# 
# set greeting=""
#
# Name: greeting
# Type: string
# Default: ""
# 
# 
# When set, this is the string that will precede every message as a
# greeting phrase to the recipients.
# 
# "Format strings" are similar to the strings used in the "C"
# function printf to format output (see the man page for more detail).
# The following sequences are defined in NeoMutt:
# 
# %n      Recipient's real name
# %u      User (login) name of recipient
# %v      First name of recipient
# 
# 
# set group_index_format="%4C %M%N %5s  %-45.45f %d"
#
# Name: group_index_format
# Type: string
# Default: "%4C %M%N %5s  %-45.45f %d"
# 
# 
# This variable allows you to customize the newsgroup browser display to
# your personal taste.  This string is similar to "index_format", but
# has its own set of printf()-like sequences:
# %a      Alert: 1 if user is notified of new mail
# %C      Current newsgroup number
# %d      Description of newsgroup (becomes from server)
# %f      Newsgroup name
# %M      - if newsgroup not allowed for direct post (moderated for example)
# %N      N if newsgroup is new, u if unsubscribed, blank otherwise
# %n      Number of new articles in newsgroup
# %p      Poll: 1 if Mailbox is checked for new mail
# %s      Number of unread articles in newsgroup
# %>X     Right justify the rest of the string and pad with character "X"
# %|X     Pad to the end of the line with character "X"
# %*X     Soft-fill with character "X" as pad
# 
# 
# set hdrs=yes
#
# Name: hdrs
# Type: boolean
# Default: yes
# 
# 
# When unset, the header fields normally added by the "my_hdr"
# command are not created.  This variable must be unset before
# composing a new message or replying in order to take effect.  If set,
# the user defined header fields are added to every new message.
# 
# 
# set header=no
#
# Name: header
# Type: boolean
# Default: no
# 
# 
# When set, this variable causes NeoMutt to include the header
# of the message you are replying to into the edit buffer.
# The $weed setting applies.
# 
# 
# set header_cache=""
#
# Name: header_cache
# Type: path
# Default: ""
# 
# 
# This variable points to the header cache database. If the path points to
# an existing directory, NeoMutt will create a dedicated header cache
# database per folder. Otherwise, the path points to a regular file, which
# will be created as needed and used as a shared global header cache for
# all folders.
# By default it is unset so no header caching will be used.
# 
# Header caching can greatly improve speed when opening POP, IMAP
# MH or Maildir folders, see "caching" in the NeoMutt Guide for details.
# 
# 
# set header_cache_backend=""
#
# Name: header_cache_backend
# Type: string
# Default: ""
# 
# 
# This variable specifies the header cache backend.  If no backend is
# specified, the first available backend will be used in the following order:
# tokyocabinet, kyotocabinet, qdbm, rocksdb, gdbm, bdb, tdb, lmdb.
# 
# 
# set header_cache_compress_level=1
#
# Name: header_cache_compress_level
# Type: number
# Default: 1
# 
# 
# When NeoMutt is compiled with lz4, zstd or zlib, this option can be used
# to setup the compression level.
# 
# 
# set header_cache_compress_method=""
#
# Name: header_cache_compress_method
# Type: string
# Default: ""
# 
# 
# When NeoMutt is compiled with lz4, zstd or zlib, the header cache backend
# can use these compression methods for compressing the cache files.
# This results in much smaller cache file sizes and may even improve speed.
# 
# 
# set header_color_partial=no
#
# Name: header_color_partial
# Type: boolean
# Default: no
# 
# 
# When set, color header regexes behave like color body regexes:
# color is applied to the exact text matched by the regex.  When
# unset, color is applied to the entire header.
# 
# One use of this option might be to apply color to just the header labels.
# 
# See "color" for more details.
# 
# 
# set help=yes
#
# Name: help
# Type: boolean
# Default: yes
# 
# 
# When set, help lines describing the bindings for the major functions
# provided by each menu are displayed on the first line of the screen.
# 
# Note: The binding will not be displayed correctly if the
# function is bound to a sequence rather than a single keystroke.  Also,
# the help line may not be updated if a binding is changed while NeoMutt is
# running.  Since this variable is primarily aimed at new users, neither
# of these should present a major problem.
# 
# 
# set hidden_host=no
#
# Name: hidden_host
# Type: boolean
# Default: no
# 
# 
# When set, NeoMutt will skip the host name part of $hostname variable
# when adding the domain part to addresses.
# 
# 
# set hidden_tags="unread,draft,flagged,passed,replied,attachment,signed,encrypted"
#
# Name: hidden_tags
# Type: string list
# Default: "unread,draft,flagged,passed,replied,attachment,signed,encrypted"
# 
# 
# This variable specifies a list of comma-separated private notmuch/imap tags
# which should not be printed on screen.
# 
# 
# set hide_limited=no
#
# Name: hide_limited
# Type: boolean
# Default: no
# 
# 
# When set, NeoMutt will not show the presence of messages that are hidden
# by limiting, in the thread tree.
# 
# 
# set hide_missing=yes
#
# Name: hide_missing
# Type: boolean
# Default: yes
# 
# 
# When set, NeoMutt will not show the presence of missing messages in the
# thread tree.
# 
# 
# set hide_thread_subject=yes
#
# Name: hide_thread_subject
# Type: boolean
# Default: yes
# 
# 
# When set, NeoMutt will not show the subject of messages in the thread
# tree that have the same subject as their parent or closest previously
# displayed sibling.
# 
# 
# set hide_top_limited=no
#
# Name: hide_top_limited
# Type: boolean
# Default: no
# 
# 
# When set, NeoMutt will not show the presence of messages that are hidden
# by limiting, at the top of threads in the thread tree.  Note that when
# $hide_limited is set, this option will have no effect.
# 
# 
# set hide_top_missing=yes
#
# Name: hide_top_missing
# Type: boolean
# Default: yes
# 
# 
# When set, NeoMutt will not show the presence of missing messages at the
# top of threads in the thread tree.  Note that when $hide_missing is
# set, this option will have no effect.
# 
# 
# set history=10
#
# Name: history
# Type: number
# Default: 10
# 
# 
# This variable controls the size (in number of strings remembered) of
# the string history buffer per category. The buffer is cleared each time the
# variable is set.
# 
# Note that strings (e.g. commands) starting with a space are never recorded
# in the history.  This is for example useful to prevent leaking sensitive
# information into the history file or for one off tests.
# 
# Also note that a string is not added to the history if it exactly matches
# its immediate predecessor, e.g. executing the same command twice in a row
# results in only one copy being added to the history.  To prevent duplicates
# over all entries use $history_remove_dups.
# 
# 
# set history_file="~/.mutthistory"
#
# Name: history_file
# Type: path
# Default: "~/.mutthistory"
# 
# 
# The file in which NeoMutt will save its history.
# 
# Also see $save_history.
# 
# 
# set history_format="%s"
#
# Name: history_format
# Type: string
# Default: "%s"
# 
# 
# Controls the format of the entries of the history list.
# This string is similar to $index_format, but has its own
# set of printf(3)-like sequences:
# %C      Line number
# %s      History match
# %>X     right justify the rest of the string and pad with character "X"
# %|X     pad to the end of the line with character "X"
# %*X     soft-fill with character "X" as pad
# 
# 
# set history_remove_dups=no
#
# Name: history_remove_dups
# Type: boolean
# Default: no
# 
# 
# When set, all of the string history will be scanned for duplicates
# when a new entry is added.  Duplicate entries in the $history_file will
# also be removed when it is periodically compacted.
# 
# 
# set honor_disposition=no
#
# Name: honor_disposition
# Type: boolean
# Default: no
# 
# 
# When set, NeoMutt will not display attachments with a
# disposition of "attachment" inline even if it could
# render the part to plain text. These MIME parts can only
# be viewed from the attachment menu.
# 
# If unset, NeoMutt will render all MIME parts it can
# properly transform to plain text.
# 
# 
# set honor_followup_to=yes
#
# Name: honor_followup_to
# Type: quadoption
# Default: yes
# 
# 
# This variable controls whether or not a Mail-Followup-To header is
# honored when group-replying to a message.
# 
# 
# set hostname=""
#
# Name: hostname
# Type: string
# Default: ""
# 
# 
# Specifies the fully-qualified hostname of the system NeoMutt is running on
# containing the host's name and the DNS domain it belongs to. It is used
# as the domain part (after "@") for local email addresses.
# 
# If not specified in a config file, then NeoMutt will try to determine the hostname itself.
# 
# Optionally, NeoMutt can be compiled with a fixed domain name.
# 
# Also see $use_domain and $hidden_host.
# 
# 
# set idn_decode=yes
#
# Name: idn_decode
# Type: boolean
# Default: yes
# 
# 
# When set, NeoMutt will show you international domain names decoded.
# Note: You can use IDNs for addresses even if this is unset.
# This variable only affects decoding. (IDN only)
# 
# 
# set idn_encode=yes
#
# Name: idn_encode
# Type: boolean
# Default: yes
# 
# 
# When set, NeoMutt will encode international domain names using
# IDN.  Unset this if your SMTP server can handle newer (RFC6531)
# UTF-8 encoded domains. (IDN only)
# 
# 
# set ignore_list_reply_to=no
#
# Name: ignore_list_reply_to
# Type: boolean
# Default: no
# 
# 
# Affects the behavior of the <reply> function when replying to
# messages from mailing lists (as defined by the "subscribe" or
# "lists" commands).  When set, if the "Reply-To:" field is
# set to the same value as the "To:" field, NeoMutt assumes that the
# "Reply-To:" field was set by the mailing list to automate responses
# to the list, and will ignore this field.  To direct a response to the
# mailing list when this option is set, use the <list-reply>
# function; <group-reply> will reply to both the sender and the
# list.
# 
# 
# set imap_authenticators=""
#
# Name: imap_authenticators
# Type: string list
# Default: ""
# 
# 
# This is a colon-separated list of authentication methods NeoMutt may
# attempt to use to log in to an IMAP server, in the order NeoMutt should
# try them.  Authentication methods are either "login" or the right
# side of an IMAP "AUTH=xxx" capability string, e.g. "digest-md5", "gssapi"
# or "cram-md5". This option is case-insensitive. If it's
# unset (the default) NeoMutt will try all available methods,
# in order from most-secure to least-secure.
# 
# Example:
# set imap_authenticators="gssapi:cram-md5:login"
# 
# Note: NeoMutt will only fall back to other authentication methods if
# the previous methods are unavailable. If a method is available but
# authentication fails, NeoMutt will not connect to the IMAP server.
# 
# 
# set imap_check_subscribed=no
#
# Name: imap_check_subscribed
# Type: boolean
# Default: no
# 
# 
# When set, NeoMutt will fetch the set of subscribed folders from
# your server whenever a mailbox is selected, and add them to the set
# of mailboxes it polls for new mail just as if you had issued individual
# "mailboxes" commands.
# 
# 
# set imap_condstore=no
#
# Name: imap_condstore
# Type: boolean
# Default: no
# 
# 
# When set, NeoMutt will use the CONDSTORE extension (RFC7162)
# if advertised by the server.  NeoMutt's current implementation is basic,
# used only for initial message fetching and flag updates.
# 
# For some IMAP servers, enabling this will slightly speed up
# downloading initial messages.  Unfortunately, Gmail is not one
# those, and displays worse performance when enabled.  Your
# mileage may vary.
# 
# 
# set imap_deflate=yes
#
# Name: imap_deflate
# Type: boolean
# Default: yes
# 
# 
# When set, NeoMutt will use the COMPRESS=DEFLATE extension (RFC4978)
# if advertised by the server.
# 
# In general a good compression efficiency can be achieved, which
# speeds up reading large mailboxes also on fairly good connections.
# 
# 
# set imap_delim_chars="/."
#
# Name: imap_delim_chars
# Type: string
# Default: "/."
# 
# 
# This contains the list of characters that NeoMutt will use as folder
# separators for IMAP paths, when no separator is provided on the IMAP
# connection.
# 
# 
# set imap_fetch_chunk_size=0
#
# Name: imap_fetch_chunk_size
# Type: number (long)
# Default: 0
# 
# 
# When set to a value greater than 0, new headers will be
# downloaded in groups of this many headers per request.  If you
# have a very large mailbox, this might prevent a timeout and
# disconnect when opening the mailbox, by sending a FETCH per set
# of this many headers, instead of a single FETCH for all new
# headers.
# 
# 
# set imap_headers=""
#
# Name: imap_headers
# Type: string
# Default: ""
# 
# 
# NeoMutt requests these header fields in addition to the default headers
# ("Date:", "From:", "Sender:", "Subject:", "To:", "Cc:", "Message-Id:",
# "References:", "Content-Type:", "Content-Description:", "In-Reply-To:",
# "Reply-To:", "Lines:", "List-Post:", "X-Label:") from IMAP
# servers before displaying the index menu. You may want to add more
# headers for spam detection.
# 
# Note: This is a space separated list, items should be uppercase
# and not contain the colon, e.g. "X-BOGOSITY X-SPAM-STATUS" for the
# "X-Bogosity:" and "X-Spam-Status:" header fields.
# 
# 
# set imap_idle=no
#
# Name: imap_idle
# Type: boolean
# Default: no
# 
# 
# When set, NeoMutt will attempt to use the IMAP IDLE extension
# to check for new mail in the current mailbox. Some servers
# (dovecot was the inspiration for this option) react badly
# to NeoMutt's implementation. If your connection seems to freeze
# up periodically, try unsetting this.
# 
# 
# set imap_keep_alive=300
#
# Name: imap_keep_alive
# Type: number
# Default: 300
# 
# 
# This variable specifies the maximum amount of time in seconds that NeoMutt
# will wait before polling open IMAP connections, to prevent the server
# from closing them before NeoMutt has finished with them. The default is
# well within the RFC-specified minimum amount of time (30 minutes) before
# a server is allowed to do this, but in practice the RFC does get
# violated every now and then. Reduce this number if you find yourself
# getting disconnected from your IMAP server due to inactivity.
# 
# 
# set imap_list_subscribed=no
#
# Name: imap_list_subscribed
# Type: boolean
# Default: no
# 
# 
# This variable configures whether IMAP folder browsing will look for
# only subscribed folders or all folders.  This can be toggled in the
# IMAP browser with the <toggle-subscribed> function.
# 
# 
# set imap_login=""
#
# Name: imap_login
# Type: string
# Default: ""
# 
# 
# Your login name on the IMAP server.
# 
# This variable defaults to the value of $imap_user.
# 
# 
# set imap_oauth_refresh_command=""
#
# Name: imap_oauth_refresh_command
# Type: command
# Default: ""
# 
# 
# The command to run to generate an OAUTH refresh token for
# authorizing your connection to your IMAP server.  This command will be
# run on every connection attempt that uses the OAUTHBEARER or XOAUTH2
# authentication mechanisms.  See "oauth" for details.
# 
# 
# set imap_pass=""
#
# Name: imap_pass
# Type: string
# Default: ""
# 
# 
# Specifies the password for your IMAP account.  If unset, NeoMutt will
# prompt you for your password when you invoke the <imap-fetch-mail> function
# or try to open an IMAP folder.
# 
# Warning: you should only use this option when you are on a
# fairly secure machine, because the superuser can read your neomuttrc even
# if you are the only one who can read the file.
# 
# 
# set imap_passive=yes
#
# Name: imap_passive
# Type: boolean
# Default: yes
# 
# 
# When set, NeoMutt will not open new IMAP connections to check for new
# mail.  NeoMutt will only check for new mail over existing IMAP
# connections.  This is useful if you don't want to be prompted for
# user/password pairs on NeoMutt invocation, or if opening the connection
# is slow.
# 
# 
# set imap_peek=yes
#
# Name: imap_peek
# Type: boolean
# Default: yes
# 
# 
# When set, NeoMutt will avoid implicitly marking your mail as read whenever
# you fetch a message from the server. This is generally a good thing,
# but can make closing an IMAP folder somewhat slower. This option
# exists to appease speed freaks.
# 
# 
# set imap_pipeline_depth=15
#
# Name: imap_pipeline_depth
# Type: number
# Default: 15
# 
# 
# Controls the number of IMAP commands that may be queued up before they
# are sent to the server. A deeper pipeline reduces the amount of time
# NeoMutt must wait for the server, and can make IMAP servers feel much
# more responsive. But not all servers correctly handle pipelined commands,
# so if you have problems you might want to try setting this variable to 0.
# 
# Note: Changes to this variable have no effect on open connections.
# 
# 
# set imap_poll_timeout=15
#
# Name: imap_poll_timeout
# Type: number
# Default: 15
# 
# 
# This variable specifies the maximum amount of time in seconds
# that NeoMutt will wait for a response when polling IMAP connections
# for new mail, before timing out and closing the connection.  Set
# to 0 to disable timing out.
# 
# 
# set imap_qresync=no
#
# Name: imap_qresync
# Type: boolean
# Default: no
# 
# 
# When set, NeoMutt will use the QRESYNC extension (RFC7162)
# if advertised by the server.  NeoMutt's current implementation is basic,
# used only for initial message fetching and flag updates.
# 
# Note: this feature is currently experimental.  If you experience
# strange behavior, such as duplicate or missing messages please
# file a bug report to let us know.
# 
# 
# set imap_rfc5161=yes
#
# Name: imap_rfc5161
# Type: boolean
# Default: yes
# 
# 
# When set, NeoMutt will use the IMAP ENABLE extension (RFC5161) to
# select CAPABILITIES. Some servers (notably Coremail System IMap Server) do
# not properly respond to ENABLE commands, which might cause NeoMutt to hang.
# If your connection seems to freeze at login, try unsetting this. See also
# https://github.com/neomutt/neomutt/issues/1689
# 
# 
# set imap_send_id=no
#
# Name: imap_send_id
# Type: boolean
# Default: no
# 
# 
# When set, NeoMutt will send an IMAP ID command (RFC2971) to the
# server when logging in if advertised by the server. This command provides
# information about the IMAP client, such as "NeoMutt" and the current version.
# 
# 
# set imap_server_noise=yes
#
# Name: imap_server_noise
# Type: boolean
# Default: yes
# 
# 
# When set, NeoMutt will display warning messages from the IMAP
# server as error messages. Since these messages are often
# harmless, or generated due to configuration problems on the
# server which are out of the users' hands, you may wish to suppress
# them at some point.
# 
# 
# set imap_user=""
#
# Name: imap_user
# Type: string
# Default: ""
# 
# 
# The name of the user whose mail you intend to access on the IMAP
# server.
# 
# This variable defaults to your user name on the local machine.
# 
# 
# set implicit_auto_view=no
#
# Name: implicit_auto_view
# Type: boolean
# Default: no
# 
# 
# If set to "yes", NeoMutt will look for a mailcap entry with the
# "copiousoutput" flag set for every MIME attachment it doesn't have
# an internal viewer defined for.  If such an entry is found, NeoMutt will
# use the viewer defined in that entry to convert the body part to text
# form.
# 
# 
# set include=ask-yes
#
# Name: include
# Type: quadoption
# Default: ask-yes
# 
# 
# Controls whether or not a copy of the message(s) you are replying to
# is included in your reply.
# 
# 
# set include_encrypted=no
#
# Name: include_encrypted
# Type: boolean
# Default: no
# 
# 
# Controls whether or not NeoMutt includes separately encrypted attachment
# contents when replying.
# 
# This variable was added to prevent accidental exposure of encrypted
# contents when replying to an attacker.  If a previously encrypted message
# were attached by the attacker, they could trick an unwary recipient into
# decrypting and including the message in their reply.
# 
# 
# set include_only_first=no
#
# Name: include_only_first
# Type: boolean
# Default: no
# 
# 
# Controls whether or not NeoMutt includes only the first attachment
# of the message you are replying.
# 
# 
# set indent_string="> "
#
# Name: indent_string
# Type: string
# Default: "> "
# 
# 
# Specifies the string to prepend to each line of text quoted in a
# message to which you are replying.  You are strongly encouraged not to
# change this value, as it tends to agitate the more fanatical netizens.
# 
# The value of this option is ignored if $text_flowed is set, because
# the quoting mechanism is strictly defined for format=flowed.
# 
# This option is a format string, please see the description of
# $index_format for supported printf(3)-style sequences.
# 
# 
# set index_format="%4C %Z %{%b %d} %-15.15L (%<l?%4l&%4c>) %s"
#
# Name: index_format
# Type: string
# Default: "%4C %Z %{%b %d} %-15.15L (%<l?%4l&%4c>) %s"
# 
# 
# This variable allows you to customize the message index display to
# your personal taste.
# 
# "Format strings" are similar to the strings used in the C
# function printf(3) to format output (see the man page for more details).
# For an explanation of the %<...> construct, see the status_format description.
# The following sequences are defined in NeoMutt:
# %a      Address of the author
# %A      Reply-to address (if present; otherwise: address of author)
# %b      Filename of the original message folder (think mailbox)
# %B      Same as %K
# %c      Number of characters (bytes) in the body of the message (see formatstrings-size)
# %C      Current message number
# %cr     Number of characters (bytes) in the raw message, including the header (see formatstrings-size)
# %d      Date and time of message using date_format and sender's timezone
#         It is encouraged to use "%{fmt}" instead, where "fmt" is the value of $date_format.
# %D      Date and time of message using date_format and local timezone
#         It is encouraged to use "%[fmt]" instead, where "fmt" is the value of $date_format.
# %e      Current message number in thread
# %E      Number of messages in current thread
# %f      Sender (address + real name), either From: or Return-Path:
# %F      Author name, or recipient name if the message is from you
# %Fp     Like %F, but plain. No contextual formatting is applied to recipient name
# %g      Message tags (e.g. notmuch tags/imap flags)
# %Gx     Individual message tag (e.g. notmuch tags/imap flags)
# %H      Spam attribute(s) of this message
# %i      Message-id of the current message
# %I      Initials of author
# %J      Message tags (if present, tree unfolded, and != parent's tags)
# %K      The list to which the letter was sent (if any; otherwise: empty)
# %l      number of lines in the unprocessed message (may not work with
#         maildir, mh, and IMAP folders)
# %L      If an address in the "To:" or "Cc:" header field matches an address
#         Defined by the user's "subscribe" command, this displays
#         "To <list-name>", otherwise the same as %F
# %m      Total number of message in the mailbox
# %M      Number of hidden messages if the thread is collapsed
# %n      Author's real name (or address if missing)
# %N      Message score
# %O      Original save folder where NeoMutt would formerly have
#         Stashed the message: list name or recipient name
#         If not sent to a list
# %P      Progress indicator for the built-in pager (how much of the file has been displayed)
# %q      Newsgroup name (if compiled with NNTP support)
# %r      Comma separated list of "To:" recipients
# %R      Comma separated list of "Cc:" recipients
# %s      Subject of the message
# %S      Single character status of the message ("N"/"O"/"D"/"d"/"!"/"r"/"*")
# %t      "To:" field (recipients)
# %T      The appropriate character from the $to_chars string
# %u      User (login) name of the author
# %v      First name of the author, or the recipient if the message is from you
# %W      Name of organization of author ("Organization:" field)
# %x      "X-Comment-To:" field (if present and compiled with NNTP support)
# %X      Number of MIME attachments
#         (please see the "attachments" section for possible speed effects)
# %y      "X-Label:" field, if present
# %Y      "X-Label:" field, if present, and (1) not at part of a thread tree,
#         (2) at the top of a thread, or (3) "X-Label:" is different from
#         Preceding message's "X-Label:"
# %Z      A three character set of message status flags.
#         The first character is new/read/replied flags ("n"/"o"/"r"/"O"/"N").
#         The second is deleted or encryption flags ("D"/"d"/"S"/"P"/"s"/"K").
#         The third is either tagged/flagged ("*"/"!"), or one of the characters
#         Listed in $to_chars.
# %zc     Message crypto flags
# %zs     Message status flags
# %zt     Message tag flags
# %@name@ insert and evaluate format-string from the matching
#         "index-format-hook" command
# %{fmt}  the date and time of the message is converted to sender's
#         time zone, and "fmt" is expanded by the library function
#         strftime(3); if the first character inside the braces
#         is a bang ("!"), the date is formatted ignoring any locale
#         settings.  Note that the sender's time zone might only be
#         available as a numerical offset, so "%Z" behaves like "%z".
#         %{fmt} behaves like %[fmt] on systems where struct tm
#         doesn't have a tm_gmtoff member.
# %[fmt]  the date and time of the message is converted to the local
#         time zone, and "fmt" is expanded by the library function
#         strftime(3); if the first character inside the brackets
#         is a bang ("!"), the date is formatted ignoring any locale settings.
# %(fmt)  the local date and time when the message was received, and
#         "fmt" is expanded by the library function strftime(3);
#         if the first character inside the parentheses is a bang ("!"),
#         the date is formatted ignoring any locale settings.
# %>X     right justify the rest of the string and pad with character "X"
# %|X     pad to the end of the line with character "X"
# %*X     soft-fill with character "X" as pad
# 
# 
# Date format expressions can be constructed based on relative dates. Using
# the date formatting operators along with nested conditionals, the date
# format can be modified based on how old a message is.  See the section on
# "Conditional Dates" for an explanation and examples
# 
# Note that for mbox/mmdf, "%l" applies to the unprocessed message, and
# for maildir/mh, the value comes from the "Lines:" header field when
# present (the meaning is normally the same). Thus the value depends on
# the encodings used in the different parts of the message and has little
# meaning in practice.
# 
# "Soft-fill" deserves some explanation: Normal right-justification
# will print everything to the left of the "%>", displaying padding and
# whatever lies to the right only if there's room. By contrast,
# soft-fill gives priority to the right-hand side, guaranteeing space
# to display it and showing padding only if there's still room. If
# necessary, soft-fill will eat text leftwards to make room for
# rightward text.
# 
# Note that these expandos are supported in
# "save-hook", "fcc-hook" and "fcc-save-hook", too.
# 
# 
# set inews=""
#
# Name: inews
# Type: command
# Default: ""
# 
# 
# If set, specifies the program and arguments used to deliver news posted
# by NeoMutt.  Otherwise, NeoMutt posts article using current connection to
# news server.  The following printf-style sequence is understood:
# %a      account url
# %p      port
# %P      port if specified
# %s      news server name
# %S      url schema
# %u      username
# 
# 
# Example:
# set inews="/usr/local/bin/inews -hS"
# 
# 
# set ispell="ispell"
#
# Name: ispell
# Type: command
# Default: "ispell"
# 
# 
# How to invoke ispell (GNU's spell-checking software).
# 
# 
# set keep_flagged=no
#
# Name: keep_flagged
# Type: boolean
# Default: no
# 
# 
# If set, read messages marked as flagged will not be moved
# from your spool mailbox to your $mbox mailbox or to the "mbox"
# specified by a mbox-hook command.
# 
# Note that $keep_flagged only has an effect if $move is set.
# 
# 
# set local_date_header=yes
#
# Name: local_date_header
# Type: boolean
# Default: yes
# 
# 
# If set, the date in the Date header of emails that you send will be in
# your local timezone. If unset a UTC date will be used instead to avoid
# leaking information about your current location.
# 
# 
# set mail_check=5
#
# Name: mail_check
# Type: number
# Default: 5
# 
# 
# This variable configures how often (in seconds) NeoMutt should look for
# new mail. Also see the $timeout variable.
# 
# 
# set mail_check_recent=yes
#
# Name: mail_check_recent
# Type: boolean
# Default: yes
# 
# 
# When set, NeoMutt will only notify you about new mail that has been received
# since the last time you opened the mailbox.  When unset, NeoMutt will notify you
# if any new mail exists in the mailbox, regardless of whether you have visited it
# recently.
# 
# 
# set mail_check_stats=no
#
# Name: mail_check_stats
# Type: boolean
# Default: no
# 
# 
# When set, NeoMutt will periodically calculate message
# statistics of a mailbox while polling for new mail.  It will
# check for unread, flagged, and total message counts.
# (Note: IMAP mailboxes only support unread and total counts).
# 
# Because this operation is more performance intensive, it defaults
# to unset, and has a separate option,
# $mail_check_stats_interval, to control how often to update these
# counts.
# 
# Message statistics can also be explicitly calculated by invoking the
# <check-stats> function.
# 
# 
# set mail_check_stats_interval=60
#
# Name: mail_check_stats_interval
# Type: number
# Default: 60
# 
# 
# When $mail_check_stats is set, this variable configures
# how often (in seconds) NeoMutt will update message counts.
# 
# 
# set mailbox_folder_format="%2C %<n?%6n&      > %6m %i"
#
# Name: mailbox_folder_format
# Type: string
# Default: "%2C %<n?%6n&      > %6m %i"
# 
# 
# This variable allows you to customize the file browser display to your
# personal taste. It's only used to customize network mailboxes (e.g. imap).
# This string is identical in formatting to the one used by
# "$folder_format".
# 
# 
# set mailcap_path="~/.mailcap:/usr/share/neomutt/mailcap:/etc/mailcap:/etc/mailcap:/usr/etc/mailcap:/usr/local/etc/mailcap"
#
# Name: mailcap_path
# Type: string list
# Default: "~/.mailcap:/usr/share/neomutt/mailcap:/etc/mailcap:/etc/mailcap:/usr/etc/mailcap:/usr/local/etc/mailcap"
# 
# 
# This variable specifies a list of colon-separated files to consult when
# attempting to display MIME bodies not directly supported by NeoMutt.  The
# default value is generated during startup: see the "mailcap" section of the
# manual.
# 
# $mailcap_path is overridden by the environment variable $MAILCAPS.
# 
# The default search path is from RFC1524.
# 
# 
# set mailcap_sanitize=yes
#
# Name: mailcap_sanitize
# Type: boolean
# Default: yes
# 
# 
# If set, NeoMutt will restrict possible characters in mailcap % expandos
# to a well-defined set of safe characters.  This is the safe setting,
# but we are not sure it doesn't break some more advanced MIME stuff.
# 
# DON'T CHANGE THIS SETTING UNLESS YOU ARE REALLY SURE WHAT YOU ARE
# DOING!
# 
# 
# set maildir_check_cur=no
#
# Name: maildir_check_cur
# Type: boolean
# Default: no
# 
# 
# If set, NeoMutt will poll both the new and cur directories of
# a maildir folder for new messages.  This might be useful if other
# programs interacting with the folder (e.g. dovecot) are moving new
# messages to the cur directory.  Note that setting this option may
# slow down polling for new messages in large folders, since NeoMutt has
# to scan all cur messages.
# 
# 
# set maildir_field_delimiter=":"
#
# Name: maildir_field_delimiter
# Type: string
# Default: ":"
# 
# 
# Use the value as maildir field delimiter. This is a single-character used to
# accommodate maildir mailboxes on platforms where `:` is not allowed
# in a filename. The recommended alternative on such platforms is `;`.
# Neomutt supports all non-alphanumeric values except for `-`, `.`, `\`, `/`.
# Note: this only applies to maildir-style mailboxes. Setting
# it will have no effect on other mailbox types.
# 
# 
# set maildir_header_cache_verify=yes
#
# Name: maildir_header_cache_verify
# Type: boolean
# Default: yes
# 
# 
# Check for Maildir unaware programs other than NeoMutt having modified maildir
# files when the header cache is in use.  This incurs one stat(2) per
# message every time the folder is opened (which can be very slow for NFS
# folders).
# 
# 
# set maildir_trash=no
#
# Name: maildir_trash
# Type: boolean
# Default: no
# 
# 
# If set, messages marked as deleted will be saved with the maildir
# trashed flag instead of unlinked.  Note: this only applies
# to maildir-style mailboxes.  Setting it will have no effect on other
# mailbox types.
# 
# 
# set mark_macro_prefix="'"
#
# Name: mark_macro_prefix
# Type: string
# Default: "'"
# 
# 
# Prefix for macros created using mark-message.  A new macro
# automatically generated with <mark-message>a will be composed
# from this prefix and the letter a.
# 
# 
# set mark_old=yes
#
# Name: mark_old
# Type: boolean
# Default: yes
# 
# 
# Controls whether or not NeoMutt marks new unread
# messages as old if you exit a mailbox without reading them.
# With this option set, the next time you start NeoMutt, the messages
# will show up with an "O" next to them in the index menu,
# indicating that they are old.
# 
# 
# set markers=yes
#
# Name: markers
# Type: boolean
# Default: yes
# 
# 
# Controls the display of wrapped lines in the internal pager. If set, a
# "+" marker is displayed at the beginning of wrapped lines.
# 
# Also see the $smart_wrap variable.
# 
# 
# set mask="!^\\.[^.]"
#
# Name: mask
# Type: regular expression
# Default: "!^\\.[^.]"
# 
# 
# A regular expression used in the file browser, optionally preceded by
# the not operator "!".  Only files whose names match this mask
# will be shown. The match is always case-sensitive.
# 
# 
# set mbox="~/mbox"
#
# Name: mbox
# Type: mailbox
# Default: "~/mbox"
# 
# 
# This specifies the folder into which read mail in your $spool_file
# folder will be appended.
# 
# Also see the $move variable.
# 
# 
# set mbox_type=mbox
#
# Name: mbox_type
# Type: enumeration
# Default: mbox
# 
# 
# The default mailbox type used when creating new folders. May be any of
# "mbox", "MMDF", "MH" or "Maildir".
# 
# This can also be set using the -m command-line option.
# 
# 
# set me_too=no
#
# Name: me_too
# Type: boolean
# Default: no
# 
# 
# If unset, NeoMutt will remove your address (see the "alternates"
# command) from the list of recipients when replying to a message.
# 
# 
# set menu_context=0
#
# Name: menu_context
# Type: number
# Default: 0
# 
# 
# This variable controls the number of lines of context that are given
# when scrolling through menus. (Similar to $pager_context.)
# 
# 
# set menu_move_off=yes
#
# Name: menu_move_off
# Type: boolean
# Default: yes
# 
# 
# When unset, the bottom entry of menus will never scroll up past
# the bottom of the screen, unless there are less entries than lines.
# When set, the bottom entry may move off the bottom.
# 
# 
# set menu_scroll=no
#
# Name: menu_scroll
# Type: boolean
# Default: no
# 
# 
# When set, menus will be scrolled up or down one line when you
# attempt to move across a screen boundary.  If unset, the screen
# is cleared and the next or previous page of the menu is displayed
# (useful for slow links to avoid many redraws).
# 
# 
# set message_cache_clean=no
#
# Name: message_cache_clean
# Type: boolean
# Default: no
# 
# 
# If set, NeoMutt will clean out obsolete entries from the message cache when
# the mailbox is synchronized. You probably only want to set it
# every once in a while, since it can be a little slow
# (especially for large folders).
# 
# 
# set message_cache_dir=""
#
# Name: message_cache_dir
# Type: path
# Default: ""
# 
# 
# Set this to a directory and NeoMutt will cache copies of messages from
# your IMAP and POP servers here. You are free to remove entries at any
# time.
# 
# When setting this variable to a directory, NeoMutt needs to fetch every
# remote message only once and can perform regular expression searches
# as fast as for local folders.
# 
# Also see the $message_cache_clean variable.
# 
# 
# set message_format="%s"
#
# Name: message_format
# Type: string
# Default: "%s"
# 
# 
# This is the string displayed in the "attachment" menu for
# attachments of type message/rfc822.  For a full listing of defined
# printf(3)-like sequences see the section on $index_format.
# 
# 
# set meta_key=no
#
# Name: meta_key
# Type: boolean
# Default: no
# 
# 
# If set, forces NeoMutt to interpret keystrokes with the high bit (bit 8)
# set as if the user had pressed the Esc key and whatever key remains
# after having the high bit removed.  For example, if the key pressed
# has an ASCII value of 0xf8, then this is treated as if the user had
# pressed Esc then "x".  This is because the result of removing the
# high bit from 0xf8 is 0x78, which is the ASCII character
# "x".
# 
# 
# set mh_purge=no
#
# Name: mh_purge
# Type: boolean
# Default: no
# 
# 
# When unset, NeoMutt will mimic mh's behavior and rename deleted messages
# to ,<old file name> in mh folders instead of really deleting
# them. This leaves the message on disk but makes programs reading the folder
# ignore it. If the variable is set, the message files will simply be
# deleted.
# 
# This option is similar to $maildir_trash for Maildir folders.
# 
# 
# set mh_seq_flagged="flagged"
#
# Name: mh_seq_flagged
# Type: string
# Default: "flagged"
# 
# 
# The name of the MH sequence used for flagged messages.
# 
# 
# set mh_seq_replied="replied"
#
# Name: mh_seq_replied
# Type: string
# Default: "replied"
# 
# 
# The name of the MH sequence used to tag replied messages.
# 
# 
# set mh_seq_unseen="unseen"
#
# Name: mh_seq_unseen
# Type: string
# Default: "unseen"
# 
# 
# The name of the MH sequence used for unseen messages.
# 
# 
# set mime_forward=no
#
# Name: mime_forward
# Type: quadoption
# Default: no
# 
# 
# When set, the message you are forwarding will be attached as a
# separate message/rfc822 MIME part instead of included in the main body of the
# message.  This is useful for forwarding MIME messages so the receiver
# can properly view the message as it was delivered to you. If you like
# to switch between MIME and not MIME from mail to mail, set this
# variable to "ask-no" or "ask-yes".
# 
# Also see $forward_decode and $mime_forward_decode.
# 
# 
# set mime_forward_decode=no
#
# Name: mime_forward_decode
# Type: boolean
# Default: no
# 
# 
# Controls the decoding of complex MIME messages into text/plain when
# forwarding a message while $mime_forward is set. Otherwise
# $forward_decode is used instead.
# 
# 
# set mime_forward_rest=yes
#
# Name: mime_forward_rest
# Type: quadoption
# Default: yes
# 
# 
# When forwarding multiple attachments of a MIME message from the attachment
# menu, attachments which can't be decoded in a reasonable manner will
# be attached to the newly composed message if this option is set.
# 
# 
# set mime_type_query_command=""
#
# Name: mime_type_query_command
# Type: command
# Default: ""
# 
# 
# This specifies a command to run, to determine the mime type of a
# new attachment when composing a message.  Unless
# $mime_type_query_first is set, this will only be run if the
# attachment's extension is not found in the mime.types file.
# 
# The string may contain a "%s", which will be substituted with the
# attachment filename.  NeoMutt will add quotes around the string substituted
# for "%s" automatically according to shell quoting rules, so you should
# avoid adding your own.  If no "%s" is found in the string, NeoMutt will
# append the attachment filename to the end of the string.
# 
# The command should output a single line containing the
# attachment's mime type.
# 
# Suggested values are "xdg-mime query filetype" or
# "file -bi".
# 
# 
# set mime_type_query_first=no
#
# Name: mime_type_query_first
# Type: boolean
# Default: no
# 
# 
# When set, the $mime_type_query_command will be run before the
# mime.types lookup.
# 
# 
# set move=no
#
# Name: move
# Type: quadoption
# Default: no
# 
# 
# If this variable is set, then NeoMutt will move read messages
# from your spool mailbox to your $mbox mailbox or to the "mbox"
# specified by a mbox-hook command.
# 
# See also $keep_flagged.
# 
# 
# set narrow_tree=no
#
# Name: narrow_tree
# Type: boolean
# Default: no
# 
# 
# This variable, when set, makes the thread tree narrower, allowing
# deeper threads to fit on the screen.
# 
# 
# set net_inc=10
#
# Name: net_inc
# Type: number
# Default: 10
# 
# 
# Operations that expect to transfer a large amount of data over the
# network will update their progress every $net_inc kilobytes.
# If set to 0, no progress messages will be displayed.
# 
# See also $read_inc, $write_inc and $net_inc.
# 
# 
# set new_mail_command=""
#
# Name: new_mail_command
# Type: command
# Default: ""
# 
# 
# If set, NeoMutt will call this command after a new message is received.
# See the $status_format documentation for the values that can be formatted
# into this command.
# 
# 
# set news_cache_dir="~/.neomutt"
#
# Name: news_cache_dir
# Type: path
# Default: "~/.neomutt"
# 
# 
# This variable pointing to directory where NeoMutt will save cached news
# articles and headers in. If unset, articles and headers will not be
# saved at all and will be reloaded from the server each time.
# 
# 
# set news_server=""
#
# Name: news_server
# Type: string
# Default: ""
# 
# 
# This variable specifies domain name or address of NNTP server.
# 
# You can also specify username and an alternative port for each news server,
# e.g. [[s]news://][username[:password]@]server[:port]
# 
# This option can also be set using the command line option "-g", the
# environment variable $NNTPSERVER, or putting the server name in the
# file "/etc/nntpserver".
# 
# 
# set newsgroups_charset="utf-8"
#
# Name: newsgroups_charset
# Type: string
# Default: "utf-8"
# 
# 
# Character set of newsgroups descriptions.
# 
# 
# set newsrc="~/.newsrc"
#
# Name: newsrc
# Type: path
# Default: "~/.newsrc"
# 
# 
# The file, containing info about subscribed newsgroups - names and
# indexes of read articles.  The following printf-style sequence
# is understood:
# Expando  Description Example
# %a      Account url       news:news.gmane.org
# %p      Port              119
# %P      Port if specified 10119
# %s      News server name  news.gmane.org
# %S      Url schema        news
# %u      Username          username
# 
# 
# set nm_config_file="auto"
#
# Name: nm_config_file
# Type: path
# Default: "auto"
# 
# 
# Configuration file for notmuch. Use 'auto' to detect configuration.
# 
# 
# set nm_config_profile=""
#
# Name: nm_config_profile
# Type: string
# Default: ""
# 
# 
# Configuration profile for notmuch.
# 
# 
# set nm_db_limit=0
#
# Name: nm_db_limit
# Type: number
# Default: 0
# 
# 
# This variable specifies the default limit used in notmuch queries.
# 
# 
# set nm_default_url=""
#
# Name: nm_default_url
# Type: string
# Default: ""
# 
# 
# This variable specifies the default Notmuch database in format
# notmuch://<absolute path>.
# 
# 
# set nm_exclude_tags=""
#
# Name: nm_exclude_tags
# Type: string
# Default: ""
# 
# 
# The messages tagged with these tags are excluded and not loaded
# from notmuch DB to NeoMutt unless specified explicitly.
# 
# 
# set nm_flagged_tag="flagged"
#
# Name: nm_flagged_tag
# Type: string
# Default: "flagged"
# 
# 
# This variable specifies notmuch tag which is used for flagged messages. The
# variable is used to count flagged messages in DB and set the flagged flag when
# modifying tags. All other NeoMutt commands use standard (e.g. maildir) flags.
# 
# 
# set nm_open_timeout=5
#
# Name: nm_open_timeout
# Type: number
# Default: 5
# 
# 
# This variable specifies the timeout for database open in seconds.
# 
# 
# set nm_query_type="messages"
#
# Name: nm_query_type
# Type: string
# Default: "messages"
# 
# 
# This variable specifies the default query type (threads or messages) used in notmuch queries.
# 
# 
# set nm_query_window_current_position=0
#
# Name: nm_query_window_current_position
# Type: number
# Default: 0
# 
# 
# This variable contains the position of the current search for window based vfolder.
# 
# 
# set nm_query_window_current_search=""
#
# Name: nm_query_window_current_search
# Type: string
# Default: ""
# 
# 
# This variable contains the currently setup notmuch search for window based vfolder.
# 
# 
# set nm_query_window_duration=0
#
# Name: nm_query_window_duration
# Type: number
# Default: 0
# 
# 
# This variable sets the time duration of a windowed notmuch query.
# Accepted values all non negative integers. A value of 0 disables the feature.
# 
# 
# set nm_query_window_enable=no
#
# Name: nm_query_window_enable
# Type: boolean
# Default: no
# 
# 
# This variable enables windowed notmuch queries even if window duration is 0.
# 
# 
# set nm_query_window_or_terms=""
#
# Name: nm_query_window_or_terms
# Type: string
# Default: ""
# 
# 
# This variable contains additional notmuch search terms for messages to be
# shown regardless of date.
# 
# Example:
# 
# Using "notmuch://?query=tag:inbox" as the mailbox and "tag:flagged and
# tag:unread" as the or terms, NeoMutt will produce a query window such as:
# 
# notmuch://?query=tag:inbox and (date:... or (tag:flagged and tag:unread))
# 
# 
# set nm_query_window_timebase="week"
#
# Name: nm_query_window_timebase
# Type: string
# Default: "week"
# 
# 
# This variable sets the time base of a windowed notmuch query.
# Accepted values are 'minute', 'hour', 'day', 'week', 'month', 'year'
# 
# 
# set nm_record=no
#
# Name: nm_record
# Type: boolean
# Default: no
# 
# 
# This variable specifies whether, when writing a just-sent message to the
# $record, the message should also be added to the notmuch DB. Replies inherit
# the notmuch tags from the original message. See $nm_record_tags for how to
# modify the set of notmuch tags assigned to sent messages written to the
# record.
# 
# 
# set nm_record_tags=""
#
# Name: nm_record_tags
# Type: string
# Default: ""
# 
# 
# This variable specifies the notmuch tag modifications (addition, removal,
# toggling) applied to messages added to the Neomutt record when $nm_record is
# true. See the description of the <modify-labels> function for the
# syntax.
# 
# 
# set nm_replied_tag="replied"
#
# Name: nm_replied_tag
# Type: string
# Default: "replied"
# 
# 
# This variable specifies notmuch tag which is used for replied messages. The
# variable is used to set the replied flag when modifying tags. All other NeoMutt
# commands use standard (e.g. maildir) flags.
# 
# 
# set nm_unread_tag="unread"
#
# Name: nm_unread_tag
# Type: string
# Default: "unread"
# 
# 
# This variable specifies notmuch tag which is used for unread messages. The
# variable is used to count unread messages in DB and set the unread flag when
# modifying tags. All other NeoMutt commands use standard (e.g. maildir) flags.
# 
# 
# set nntp_authenticators=""
#
# Name: nntp_authenticators
# Type: string
# Default: ""
# 
# 
# This is a colon-delimited list of authentication methods NeoMutt may
# attempt to use to log in to a news server, in the order NeoMutt should
# try them.  Authentication methods are either "user" or any
# SASL mechanism, e.g. "digest-md5", "gssapi" or "cram-md5".
# This option is case-insensitive.  If it's unset (the default)
# NeoMutt will try all available methods, in order from most-secure to
# least-secure.
# 
# Example:
# set nntp_authenticators="digest-md5:user"
# 
# Note: NeoMutt will only fall back to other authentication methods if
# the previous methods are unavailable. If a method is available but
# authentication fails, NeoMutt will not connect to the IMAP server.
# 
# 
# set nntp_context=1000
#
# Name: nntp_context
# Type: number (long)
# Default: 1000
# 
# 
# This variable defines number of articles which will be in index when
# newsgroup entered.  If active newsgroup have more articles than this
# number, oldest articles will be ignored.  Also controls how many
# articles headers will be saved in cache when you quit newsgroup.
# 
# 
# set nntp_listgroup=yes
#
# Name: nntp_listgroup
# Type: boolean
# Default: yes
# 
# 
# This variable controls whether or not existence of each article is
# checked when newsgroup is entered.
# 
# 
# set nntp_load_description=yes
#
# Name: nntp_load_description
# Type: boolean
# Default: yes
# 
# 
# This variable controls whether or not descriptions for each newsgroup
# must be loaded when newsgroup is added to list (first time list
# loading or new newsgroup adding).
# 
# 
# set nntp_pass=""
#
# Name: nntp_pass
# Type: string
# Default: ""
# 
# 
# Your password for NNTP account.
# 
# 
# set nntp_poll=60
#
# Name: nntp_poll
# Type: number
# Default: 60
# 
# 
# The time in seconds until any operations on newsgroup except post new
# article will cause recheck for new news.  If set to 0, NeoMutt will
# recheck newsgroup on each operation in index (stepping, read article,
# etc.).
# 
# 
# set nntp_user=""
#
# Name: nntp_user
# Type: string
# Default: ""
# 
# 
# Your login name on the NNTP server.  If unset and NNTP server requires
# authentication, NeoMutt will prompt you for your account name when you
# connect to news server.
# 
# 
# set pager=""
#
# Name: pager
# Type: command
# Default: ""
# 
# 
# This variable specifies which pager you would like to use to view
# messages. When empty, NeoMutt will use the built-in pager, otherwise this
# variable should specify the pathname of the external pager you would
# like to use.
# 
# Using an external pager may have some disadvantages: Additional
# keystrokes are necessary because you can't call NeoMutt functions
# directly from the pager, and screen resizes cause lines longer than
# the screen width to be badly formatted in the help menu.
# 
# 
# set pager_context=0
#
# Name: pager_context
# Type: number
# Default: 0
# 
# 
# This variable controls the number of lines of context that are given
# when displaying the next or previous page in the internal pager.  By
# default, NeoMutt will display the line after the last one on the screen
# at the top of the next page (0 lines of context).
# 
# This variable also specifies the amount of context given for search
# results. If positive, this many lines will be given before a match,
# if 0, the match will be top-aligned.
# 
# 
# set pager_format="-%Z- %C/%m: %-20.20n   %s%*  -- (%P)"
#
# Name: pager_format
# Type: string
# Default: "-%Z- %C/%m: %-20.20n   %s%*  -- (%P)"
# 
# 
# This variable controls the format of the one-line message "status"
# displayed before each message in either the internal or an external
# pager.  The valid sequences are listed in the $index_format
# section.
# 
# 
# set pager_index_lines=0
#
# Name: pager_index_lines
# Type: number
# Default: 0
# 
# 
# Determines the number of lines of a mini-index which is shown when in
# the pager.  The current message, unless near the top or bottom of the
# folder, will be roughly one third of the way down this mini-index,
# giving the reader the context of a few messages before and after the
# message.  This is useful, for example, to determine how many messages
# remain to be read in the current thread.  A value of 0 results in no index
# being shown.
# 
# 
# set pager_read_delay=0
#
# Name: pager_read_delay
# Type: number
# Default: 0
# 
# 
# Determines the number of seconds that must elapse after first
# opening a new message in the pager before that message will be
# marked as read.  A value of 0 results in the message being marked
# read unconditionally; for other values, navigating to another
# message or exiting the pager before the timeout will leave the
# message marked unread.  This setting is ignored if $pager is set.
# 
# 
# set pager_skip_quoted_context=0
#
# Name: pager_skip_quoted_context
# Type: number
# Default: 0
# 
# 
# Determines the number of lines of context to show before the
# unquoted text when using the <skip-quoted> function. When set
# to a positive number at most that many lines of the previous quote
# are displayed. If the previous quote is shorter the whole quote is
# displayed.
# 
# The (now deprecated) skip_quoted_offset is an alias for this
# variable, and should no longer be used.
# 
# 
# set pager_stop=no
#
# Name: pager_stop
# Type: boolean
# Default: no
# 
# 
# When set, the internal-pager will not move to the next message
# when you are at the end of a message and invoke the <next-page>
# function.
# 
# 
# set pattern_format="%2n %-15e  %d"
#
# Name: pattern_format
# Type: string
# Default: "%2n %-15e  %d"
# 
# 
# This variable describes the format of the "pattern completion" menu. The
# following printf(3)-style sequences are understood:
# %d      pattern description
# %e      pattern expression
# %n      index number
# %>X     right justify the rest of the string and pad with character "X"
# %|X     pad to the end of the line with character "X"
# %*X     soft-fill with character "X" as pad
# 
# 
# 
# 
# set pgp_auto_decode=no
#
# Name: pgp_auto_decode
# Type: boolean
# Default: no
# 
# 
# If set, NeoMutt will automatically attempt to decrypt traditional PGP
# messages whenever the user performs an operation which ordinarily would
# result in the contents of the message being operated on.  For example,
# if the user displays a pgp-traditional message which has not been manually
# checked with the <check-traditional-pgp> function, NeoMutt will automatically
# check the message for traditional pgp.
# 
# 
# set pgp_auto_inline=no
#
# Name: pgp_auto_inline
# Type: boolean
# Default: no
# 
# 
# This option controls whether NeoMutt generates old-style inline
# (traditional) PGP encrypted or signed messages under certain
# circumstances.  This can be overridden by use of the pgp menu,
# when inline is not required.  The GPGME backend does not support
# this option.
# 
# Note that NeoMutt might automatically use PGP/MIME for messages
# which consist of more than a single MIME part.  NeoMutt can be
# configured to ask before sending PGP/MIME messages when inline
# (traditional) would not work.
# 
# Also see the $pgp_mime_auto variable.
# 
# Also note that using the old-style PGP message format is strongly
# deprecated.
# (PGP only)
# 
# 
# set pgp_check_exit=yes
#
# Name: pgp_check_exit
# Type: boolean
# Default: yes
# 
# 
# If set, NeoMutt will check the exit code of the PGP subprocess when
# signing or encrypting.  A non-zero exit code means that the
# subprocess failed.
# (PGP only)
# 
# 
# set pgp_check_gpg_decrypt_status_fd=yes
#
# Name: pgp_check_gpg_decrypt_status_fd
# Type: boolean
# Default: yes
# 
# 
# If set, NeoMutt will check the status file descriptor output
# of $pgp_decrypt_command and $pgp_decode_command for GnuPG status codes
# indicating successful decryption.  This will check for the presence of
# DECRYPTION_OKAY, absence of DECRYPTION_FAILED, and that all
# PLAINTEXT occurs between the BEGIN_DECRYPTION and END_DECRYPTION
# status codes.
# 
# If unset, NeoMutt will instead match the status fd output
# against $pgp_decryption_okay.
# (PGP only)
# 
# 
# set pgp_clear_sign_command=""
#
# Name: pgp_clear_sign_command
# Type: command
# Default: ""
# 
# 
# This format is used to create an old-style "clearsigned" PGP
# message.  Note that the use of this format is strongly
# deprecated.
# 
# This is a format string, see the $pgp_decode_command command for
# possible printf(3)-like sequences.
# Note that in this case, %r expands to the search string, which is a list of
# one or more quoted values such as email address, name, or keyid.
# (PGP only)
# 
# 
# set pgp_decode_command=""
#
# Name: pgp_decode_command
# Type: command
# Default: ""
# 
# 
# This format strings specifies a command which is used to decode
# application/pgp attachments.
# 
# The PGP command formats have their own set of printf(3)-like sequences:
# %a      The value of $pgp_sign_as if set, otherwise the value
#         of $pgp_default_key.
# %f      Expands to the name of a file containing a message.
# %p      Expands to PGPPASSFD=0 when a pass phrase is needed, to an empty
#         string otherwise. Note: This may be used with a %<...> construct.
# %r      One or more key IDs (or fingerprints if available).
# %s      Expands to the name of a file containing the signature part
#         of a multipart/signed attachment when verifying it.
# 
# 
# (PGP only)
# 
# 
# set pgp_decrypt_command=""
#
# Name: pgp_decrypt_command
# Type: command
# Default: ""
# 
# 
# This command is used to decrypt a PGP encrypted message.
# 
# This is a format string, see the $pgp_decode_command command for
# possible printf(3)-like sequences.
# (PGP only)
# 
# Note: When decrypting messages using gpg, a pinentry program needs to
# be invoked unless the password is cached within gpg-agent.
# Currently, the pinentry-tty program (usually distributed with
# gpg) isn't suitable for being invoked by NeoMutt.  You are encouraged
# to use a different pinentry-program when running NeoMutt in order to avoid
# problems.
# 
# See also: https://github.com/neomutt/neomutt/issues/1014
# 
# 
# set pgp_decryption_okay=""
#
# Name: pgp_decryption_okay
# Type: regular expression
# Default: ""
# 
# 
# If you assign text to this variable, then an encrypted PGP
# message is only considered successfully decrypted if the output
# from $pgp_decrypt_command contains the text.  This is used to
# protect against a spoofed encrypted message, with multipart/encrypted
# headers but containing a block that is not actually encrypted.
# (e.g. simply signed and ascii armored text).
# 
# Note that if $pgp_check_gpg_decrypt_status_fd is set, this variable
# is ignored.
# (PGP only)
# 
# 
# set pgp_default_key=""
#
# Name: pgp_default_key
# Type: string
# Default: ""
# 
# 
# This is the default key-pair to use for PGP operations.  It will be
# used for encryption (see $postpone_encrypt and $pgp_self_encrypt).
# 
# It will also be used for signing unless $pgp_sign_as is set.
# 
# The (now deprecated) pgp_self_encrypt_as is an alias for this
# variable, and should no longer be used.
# (PGP only)
# 
# 
# set pgp_encrypt_only_command=""
#
# Name: pgp_encrypt_only_command
# Type: command
# Default: ""
# 
# 
# This command is used to encrypt a body part without signing it.
# 
# This is a format string, see the $pgp_decode_command command for
# possible printf(3)-like sequences.
# Note that in this case, %r expands to the search string, which is a list of
# one or more quoted values such as email address, name, or keyid.
# (PGP only)
# 
# 
# set pgp_encrypt_sign_command=""
#
# Name: pgp_encrypt_sign_command
# Type: command
# Default: ""
# 
# 
# This command is used to both sign and encrypt a body part.
# 
# This is a format string, see the $pgp_decode_command command for
# possible printf(3)-like sequences.
# (PGP only)
# 
# 
# set pgp_entry_format="%4n %t%f %4l/0x%k %-4a %2c %u"
#
# Name: pgp_entry_format
# Type: string
# Default: "%4n %t%f %4l/0x%k %-4a %2c %u"
# 
# 
# This variable allows you to customize the PGP key selection menu to
# your personal taste. If $crypt_use_gpgme is set, then it applies
# to S/MIME key selection menu also. This string is similar to $index_format,
# but has its own set of printf(3)-like sequences:
# %a      Algorithm
# %c      Capabilities
# %f      Flags
# %i      Key fingerprint (or long key id if non-existent)
# %k      Key id
# %l      Key length
# %n      Number
# %p      Protocol
# %t      Trust/validity of the key-uid association
# %u      User id
# %[<s>]  Date of the key where <s> is an strftime(3) expression
# %>X     Right justify the rest of the string and pad with character "X"
# %|X     Pad to the end of the line with character "X"
# %*X     Soft-fill with character "X" as pad
# 
# 
# See the section "Sending Cryptographically Signed/Encrypted Messages" of the
# user manual for the meaning of the letters some of these sequences expand
# to.
# 
# (Crypto only) or (PGP only when GPGME disabled)
# 
# 
# set pgp_export_command=""
#
# Name: pgp_export_command
# Type: command
# Default: ""
# 
# 
# This command is used to export a public key from the user's
# key ring.
# 
# This is a format string, see the $pgp_decode_command command for
# possible printf(3)-like sequences.
# (PGP only)
# 
# 
# set pgp_get_keys_command=""
#
# Name: pgp_get_keys_command
# Type: command
# Default: ""
# 
# 
# This command is invoked whenever NeoMutt needs to fetch the public key associated with
# an email address.  Of the sequences supported by $pgp_decode_command, %r is
# the only printf(3)-like sequence used with this format.  Note that
# in this case, %r expands to the email address, not the public key ID (the key ID is
# unknown, which is why NeoMutt is invoking this command).
# (PGP only)
# 
# 
# set pgp_good_sign=""
#
# Name: pgp_good_sign
# Type: regular expression
# Default: ""
# 
# 
# If you assign a text to this variable, then a PGP signature is only
# considered verified if the output from $pgp_verify_command contains
# the text. Use this variable if the exit code from the command is 0
# even for bad signatures.
# (PGP only)
# 
# 
# set pgp_ignore_subkeys=yes
#
# Name: pgp_ignore_subkeys
# Type: boolean
# Default: yes
# 
# 
# Setting this variable will cause NeoMutt to ignore OpenPGP subkeys. Instead,
# the principal key will inherit the subkeys' capabilities.  Unset this
# if you want to play interesting key selection games.
# (PGP only)
# 
# 
# set pgp_import_command=""
#
# Name: pgp_import_command
# Type: command
# Default: ""
# 
# 
# This command is used to import a key from a message into
# the user's public key ring.
# 
# This is a format string, see the $pgp_decode_command command for
# possible printf(3)-like sequences.
# (PGP only)
# 
# 
# set pgp_list_pubring_command=""
#
# Name: pgp_list_pubring_command
# Type: command
# Default: ""
# 
# 
# This command is used to list the public key ring's contents.  The
# output format must be analogous to the one used by
# gpg --list-keys --with-colons --with-fingerprint
# 
# Note: gpg's fixed-list-mode option should not be used.  It
# produces a different date format which may result in NeoMutt showing
# incorrect key generation dates.
# 
# This is a format string, see the $pgp_decode_command command for
# possible printf(3)-like sequences.
# (PGP only)
# 
# 
# set pgp_list_secring_command=""
#
# Name: pgp_list_secring_command
# Type: command
# Default: ""
# 
# 
# This command is used to list the secret key ring's contents.  The
# output format must be analogous to the one used by:
# gpg --list-keys --with-colons --with-fingerprint
# 
# Note: gpg's fixed-list-mode option should not be used.  It
# produces a different date format which may result in NeoMutt showing
# incorrect key generation dates.
# 
# This is a format string, see the $pgp_decode_command command for
# possible printf(3)-like sequences.
# (PGP only)
# 
# 
# set pgp_key_sort=address
#
# Name: pgp_key_sort
# Type: sort order
# Default: address
# 
# 
# Specifies how the entries in the pgp menu are sorted. The
# following are legal values:
# address sort alphabetically by user id
# keyid   sort alphabetically by key id
# date    sort by key creation date
# trust   sort by the trust of the key
# 
# 
# If you prefer reverse order of the above values, prefix it with
# "reverse-".
# (PGP only)
# 
# 
# set pgp_long_ids=yes
#
# Name: pgp_long_ids
# Type: boolean
# Default: yes
# 
# 
# If set, use 64 bit PGP key IDs, if unset use the normal 32 bit key IDs.
# NOTE: Internally, NeoMutt has transitioned to using fingerprints (or long key IDs
# as a fallback).  This option now only controls the display of key IDs
# in the key selection menu and a few other places.
# (PGP only)
# 
# 
# set pgp_mime_auto=ask-yes
#
# Name: pgp_mime_auto
# Type: quadoption
# Default: ask-yes
# 
# 
# This option controls whether NeoMutt will prompt you for
# automatically sending a (signed/encrypted) message using
# PGP/MIME when inline (traditional) fails (for any reason).
# 
# Also note that using the old-style PGP message format is strongly
# deprecated.
# (PGP only)
# 
# 
# set pgp_reply_inline=no
#
# Name: pgp_reply_inline
# Type: boolean
# Default: no
# 
# 
# Setting this variable will cause NeoMutt to always attempt to
# create an inline (traditional) message when replying to a
# message which is PGP encrypted/signed inline.  This can be
# overridden by use of the pgp menu, when inline is not
# required.  This option does not automatically detect if the
# (replied-to) message is inline; instead it relies on NeoMutt
# internals for previously checked/flagged messages.
# 
# Note that NeoMutt might automatically use PGP/MIME for messages
# which consist of more than a single MIME part.  NeoMutt can be
# configured to ask before sending PGP/MIME messages when inline
# (traditional) would not work.
# 
# Also see the $pgp_mime_auto variable.
# 
# Also note that using the old-style PGP message format is strongly
# deprecated.
# (PGP only)
# 
# 
# set pgp_retainable_sigs=no
#
# Name: pgp_retainable_sigs
# Type: boolean
# Default: no
# 
# 
# If set, signed and encrypted messages will consist of nested
# multipart/signed and multipart/encrypted body parts.
# 
# This is useful for applications like encrypted and signed mailing
# lists, where the outer layer (multipart/encrypted) can be easily
# removed, while the inner multipart/signed part is retained.
# (PGP only)
# 
# 
# set pgp_self_encrypt=yes
#
# Name: pgp_self_encrypt
# Type: boolean
# Default: yes
# 
# 
# When set, PGP encrypted messages will also be encrypted
# using the key in $pgp_default_key.
# (PGP only)
# 
# 
# set pgp_show_unusable=yes
#
# Name: pgp_show_unusable
# Type: boolean
# Default: yes
# 
# 
# If set, NeoMutt will display non-usable keys on the PGP key selection
# menu.  This includes keys which have been revoked, have expired, or
# have been marked as "disabled" by the user.
# (PGP only)
# 
# 
# set pgp_sign_as=""
#
# Name: pgp_sign_as
# Type: string
# Default: ""
# 
# 
# If you have a different key pair to use for signing, you should
# set this to the signing key.  Most people will only need to set
# $pgp_default_key.  It is recommended that you use the keyid form
# to specify your key (e.g. 0x00112233).
# (PGP only)
# 
# 
# set pgp_sign_command=""
#
# Name: pgp_sign_command
# Type: command
# Default: ""
# 
# 
# This command is used to create the detached PGP signature for a
# multipart/signed PGP/MIME body part.
# 
# This is a format string, see the $pgp_decode_command command for
# possible printf(3)-like sequences.
# (PGP only)
# 
# 
# set pgp_strict_enc=yes
#
# Name: pgp_strict_enc
# Type: boolean
# Default: yes
# 
# 
# If set, NeoMutt will automatically encode PGP/MIME signed messages as
# quoted-printable.  Please note that unsetting this variable may
# lead to problems with non-verifyable PGP signatures, so only change
# this if you know what you are doing.
# (PGP only)
# 
# 
# set pgp_timeout=300
#
# Name: pgp_timeout
# Type: number (long)
# Default: 300
# 
# 
# The number of seconds after which a cached passphrase will expire if
# not used.
# (PGP only)
# 
# 
# set pgp_use_gpg_agent=yes
#
# Name: pgp_use_gpg_agent
# Type: boolean
# Default: yes
# 
# 
# If set, NeoMutt expects a gpg-agent(1) process will handle
# private key passphrase prompts.  If unset, NeoMutt will prompt
# for the passphrase and pass it via stdin to the pgp command.
# 
# Note that as of version 2.1, GnuPG automatically spawns an agent
# and requires the agent be used for passphrase management.  Since
# that version is increasingly prevalent, this variable now
# defaults set.
# 
# NeoMutt works with a GUI or curses pinentry program.  A TTY pinentry
# should not be used.
# 
# If you are using an older version of GnuPG without an agent running,
# or another encryption program without an agent, you will need to
# unset this variable.
# (PGP only)
# 
# 
# set pgp_verify_command=""
#
# Name: pgp_verify_command
# Type: command
# Default: ""
# 
# 
# This command is used to verify PGP signatures.
# 
# This is a format string, see the $pgp_decode_command command for
# possible printf(3)-like sequences.
# (PGP only)
# 
# 
# set pgp_verify_key_command=""
#
# Name: pgp_verify_key_command
# Type: command
# Default: ""
# 
# 
# This command is used to verify key information from the key selection
# menu.
# 
# This is a format string, see the $pgp_decode_command command for
# possible printf(3)-like sequences.
# (PGP only)
# 
# 
# set pipe_decode=no
#
# Name: pipe_decode
# Type: boolean
# Default: no
# 
# 
# Used in connection with the <pipe-message> function.  When unset,
# NeoMutt will pipe the messages without any preprocessing. When set, NeoMutt
# will attempt to decode the messages first.
# 
# Also see $pipe_decode_weed, which controls whether headers will
# be weeded when this is set.
# 
# 
# set pipe_decode_weed=yes
#
# Name: pipe_decode_weed
# Type: boolean
# Default: yes
# 
# 
# For <pipe-message>, when $pipe_decode is set, this further
# controls whether NeoMutt will weed headers.
# 
# 
# set pipe_sep="\n"
#
# Name: pipe_sep
# Type: string
# Default: "\n"
# 
# 
# The separator to add between messages when piping a list of tagged
# messages to an external Unix command.
# 
# 
# set pipe_split=no
#
# Name: pipe_split
# Type: boolean
# Default: no
# 
# 
# Used in connection with the <pipe-message> function following
# <tag-prefix>.  If this variable is unset, when piping a list of
# tagged messages NeoMutt will concatenate the messages and will pipe them
# all concatenated.  When set, NeoMutt will pipe the messages one by one.
# In both cases the messages are piped in the current sorted order,
# and the $pipe_sep separator is added after each message.
# 
# 
# set pop_auth_try_all=yes
#
# Name: pop_auth_try_all
# Type: boolean
# Default: yes
# 
# 
# If set, NeoMutt will try all available authentication methods.
# When unset, NeoMutt will only fall back to other authentication
# methods if the previous methods are unavailable. If a method is
# available but authentication fails, NeoMutt will not connect to the POP server.
# 
# 
# set pop_authenticators=""
#
# Name: pop_authenticators
# Type: string list
# Default: ""
# 
# 
# This is a colon-separated list of authentication methods NeoMutt may
# attempt to use to log in to an POP server, in the order NeoMutt should
# try them.  Authentication methods are either "user", "apop" or any
# SASL mechanism, e.g. "digest-md5", "gssapi" or "cram-md5".
# This option is case-insensitive. If this option is unset
# (the default) NeoMutt will try all available methods, in order from
# most-secure to least-secure.
# 
# Example:
# set pop_authenticators="digest-md5:apop:user"
# 
# 
# set pop_check_interval=60
#
# Name: pop_check_interval
# Type: number
# Default: 60
# 
# 
# This variable configures how often (in seconds) NeoMutt should look for
# new mail in the currently selected mailbox if it is a POP mailbox.
# 
# 
# set pop_delete=ask-no
#
# Name: pop_delete
# Type: quadoption
# Default: ask-no
# 
# 
# If set, NeoMutt will delete successfully downloaded messages from the POP
# server when using the <fetch-mail> function.  When unset, NeoMutt will
# download messages but also leave them on the POP server.
# 
# 
# set pop_host=""
#
# Name: pop_host
# Type: string
# Default: ""
# 
# 
# The name of your POP server for the <fetch-mail> function.  You
# can also specify an alternative port, username and password, i.e.:
# [pop[s]://][username[:password]@]popserver[:port]
# 
# where "[...]" denotes an optional part.
# 
# 
# set pop_last=no
#
# Name: pop_last
# Type: boolean
# Default: no
# 
# 
# If this variable is set, NeoMutt will try to use the "LAST" POP command
# for retrieving only unread messages from the POP server when using
# the <fetch-mail> function.
# 
# 
# set pop_oauth_refresh_command=""
#
# Name: pop_oauth_refresh_command
# Type: command
# Default: ""
# 
# 
# The command to run to generate an OAUTH refresh token for
# authorizing your connection to your POP server.  This command will be
# run on every connection attempt that uses the OAUTHBEARER authentication
# mechanism.  See "oauth" for details.
# 
# 
# set pop_pass=""
#
# Name: pop_pass
# Type: string
# Default: ""
# 
# 
# Specifies the password for your POP account.  If unset, NeoMutt will
# prompt you for your password when you open a POP mailbox.
# 
# Warning: you should only use this option when you are on a
# fairly secure machine, because the superuser can read your neomuttrc
# even if you are the only one who can read the file.
# 
# 
# set pop_reconnect=ask-yes
#
# Name: pop_reconnect
# Type: quadoption
# Default: ask-yes
# 
# 
# Controls whether or not NeoMutt will try to reconnect to the POP server if
# the connection is lost.
# 
# 
# set pop_user=""
#
# Name: pop_user
# Type: string
# Default: ""
# 
# 
# Your login name on the POP server.
# 
# This variable defaults to your user name on the local machine.
# 
# 
# set post_moderated=ask-yes
#
# Name: post_moderated
# Type: quadoption
# Default: ask-yes
# 
# 
# If set to yes, NeoMutt will post article to newsgroup that have
# not permissions to posting (e.g. moderated).  Note: if news server
# does not support posting to that newsgroup or totally read-only, that
# posting will not have an effect.
# 
# 
# set postpone=ask-yes
#
# Name: postpone
# Type: quadoption
# Default: ask-yes
# 
# 
# Controls whether or not messages are saved in the $postponed
# mailbox when you elect not to send immediately. If set to
# ask-yes or ask-no, you will be prompted with "Save
# (postpone) draft message?" when quitting from the "compose"
# screen.
# 
# Also see the $recall variable.
# 
# 
# set postpone_encrypt=no
#
# Name: postpone_encrypt
# Type: boolean
# Default: no
# 
# 
# When set, postponed messages that are marked for encryption will be
# self-encrypted.  NeoMutt will first try to encrypt using the value specified
# in $pgp_default_key or $smime_default_key.  If those are not
# set, it will try the deprecated $postpone_encrypt_as.
# (Crypto only)
# 
# 
# set postpone_encrypt_as=""
#
# Name: postpone_encrypt_as
# Type: string
# Default: ""
# 
# 
# This is a deprecated fall-back variable for $postpone_encrypt.
# Please use $pgp_default_key or $smime_default_key.
# (Crypto only)
# 
# 
# set postponed="~/postponed"
#
# Name: postponed
# Type: mailbox
# Default: "~/postponed"
# 
# 
# NeoMutt allows you to indefinitely "postpone sending a message" which
# you are editing.  When you choose to postpone a message, NeoMutt saves it
# in the mailbox specified by this variable.
# 
# Also see the $postpone variable.
# 
# 
# set preconnect=""
#
# Name: preconnect
# Type: string
# Default: ""
# 
# 
# If set, a shell command to be executed if NeoMutt fails to establish
# a connection to the server. This is useful for setting up secure
# connections, e.g. with ssh(1). If the command returns a  nonzero
# status, NeoMutt gives up opening the server. Example:
# set preconnect="ssh -f -q -L 1234:mailhost.net:143 mailhost.net \
# sleep 20 < /dev/null > /dev/null"
# 
# Mailbox "foo" on "mailhost.net" can now be reached
# as "{localhost:1234}foo".
# 
# Note: For this example to work, you must be able to log in to the
# remote machine without having to enter a password.
# 
# 
# set preferred_languages=""
#
# Name: preferred_languages
# Type: string list
# Default: ""
# 
# 
# This variable specifies a list of comma-separated languages.
# RFC8255 : user preferred languages to be searched in parts and display.
# Example:
# set preferred_languages="en,fr,de"
# 
# 
# set print=ask-no
#
# Name: print
# Type: quadoption
# Default: ask-no
# 
# 
# Controls whether or not NeoMutt really prints messages.
# This is set to "ask-no" by default, because some people
# accidentally hit "p" often.
# 
# 
# set print_command="lpr"
#
# Name: print_command
# Type: command
# Default: "lpr"
# 
# 
# This specifies the command pipe that should be used to print messages.
# 
# 
# set print_decode=yes
#
# Name: print_decode
# Type: boolean
# Default: yes
# 
# 
# Used in connection with the <print-message> function.  If this
# option is set, the message is decoded before it is passed to the
# external command specified by $print_command.  If this option
# is unset, no processing will be applied to the message when
# printing it.  The latter setting may be useful if you are using
# some advanced printer filter which is able to properly format
# e-mail messages for printing.
# 
# Also see $print_decode_weed, which controls whether headers will
# be weeded when this is set.
# 
# 
# set print_decode_weed=yes
#
# Name: print_decode_weed
# Type: boolean
# Default: yes
# 
# 
# For <print-message>, when $print_decode is set, this
# further controls whether NeoMutt will weed headers.
# 
# 
# set print_split=no
#
# Name: print_split
# Type: boolean
# Default: no
# 
# 
# Used in connection with the <print-message> function.  If this option
# is set, the command specified by $print_command is executed once for
# each message which is to be printed.  If this option is unset,
# the command specified by $print_command is executed only once, and
# all the messages are concatenated, with a form feed as the message
# separator.
# 
# Those who use the enscript(1) program's mail-printing mode will
# most likely want to set this option.
# 
# 
# set prompt_after=yes
#
# Name: prompt_after
# Type: boolean
# Default: yes
# 
# 
# If you use an external $pager, setting this variable will
# cause NeoMutt to prompt you for a command when the pager exits rather
# than returning to the index menu.  If unset, NeoMutt will return to the
# index menu when the external pager exits.
# 
# 
# set query_command=""
#
# Name: query_command
# Type: command
# Default: ""
# 
# 
# This specifies the command NeoMutt will use to make external address
# queries.  The string may contain a "%s", which will be substituted
# with the query string the user types.  NeoMutt will add quotes around the
# string substituted for "%s" automatically according to shell quoting
# rules, so you should avoid adding your own.  If no "%s" is found in
# the string, NeoMutt will append the user's query to the end of the string.
# See "query" (https://neomutt.org/guide/advancedusage.html#query) for more
# information.
# 
# 
# set query_format="%3i %t %-25N %-25E | %C%> %Y"
#
# Name: query_format
# Type: string
# Default: "%3i %t %-25N %-25E | %C%> %Y"
# 
# 
# This variable describes the format of the "query" menu. The
# following printf(3)-style sequences are understood:
# %A      Full Address (Name and Email)
# %C      Comment
# %E      Email Address
# %i      Index number
# %N      Real name
# %t      Alias is tagged (selected)
# %Y      User-defined tags (labels)
# %>X     Right justify the rest of the string and pad with "X"
# %|X     Pad to the end of the line with "X"
# %*X     Soft-fill with character "X" as pad
# 
# 
# For an explanation of "soft-fill", see the $index_format documentation.
# 
# The following sequences are deprecated; they will be removed in the future.
# %a      Use %E instead
# %c      Use %i instead
# %e      Use %C instead
# %n      Use %N instead
# 
# 
# set quit=yes
#
# Name: quit
# Type: quadoption
# Default: yes
# 
# 
# This variable controls whether "quit" and "exit" actually quit
# from NeoMutt.  If this option is set, they do quit, if it is unset, they
# have no effect, and if it is set to ask-yes or ask-no, you are
# prompted for confirmation when you try to quit.
# 
# In order to quit from NeoMutt if this variable is unset, you must send
# the signal SIGINT to NeoMutt.  This can usually be achieved by pressing
# CTRL-C in the terminal.
# 
# 
# set quote_regex="^([ \t]*[|>:}#])+"
#
# Name: quote_regex
# Type: regular expression
# Default: "^([ \t]*[|>:}#])+"
# 
# 
# A regular expression used in the internal pager to determine quoted
# sections of text in the body of a message. Quoted text may be filtered
# out using the <toggle-quoted> command, or colored according to the
# "color quoted" family of directives.
# 
# Higher levels of quoting may be colored differently ("color quoted1",
# "color quoted2", etc.). The quoting level is determined by removing
# the last character from the matched text and recursively reapplying
# the regular expression until it fails to produce a match.
# 
# Match detection may be overridden by the $smileys regular expression.
# 
# 
# set read_inc=10
#
# Name: read_inc
# Type: number
# Default: 10
# 
# 
# If set to a value greater than 0, NeoMutt will display which message it
# is currently on when reading a mailbox or when performing search actions
# such as search and limit. The message is printed after
# this many messages have been read or searched (e.g., if set to 25, NeoMutt will
# print a message when it is at message 25, and then again when it gets
# to message 50).  This variable is meant to indicate progress when
# reading or searching large mailboxes which may take some time.
# When set to 0, only a single message will appear before the reading
# the mailbox.
# 
# Also see the $write_inc, $net_inc and $time_inc variables and the
# "tuning" section of the manual for performance considerations.
# 
# 
# set read_only=no
#
# Name: read_only
# Type: boolean
# Default: no
# 
# 
# If set, all folders are opened in read-only mode.
# 
# 
# set real_name=""
#
# Name: real_name
# Type: string
# Default: ""
# 
# 
# This variable specifies what "real" or "personal" name should be used
# when sending messages.
# 
# If not specified, then the user's "real name" will be read from /etc/passwd.
# This option will not be used, if "$from" is set.
# 
# 
# set recall=ask-yes
#
# Name: recall
# Type: quadoption
# Default: ask-yes
# 
# 
# Controls whether or not NeoMutt recalls postponed messages
# when composing a new message.
# 
# Setting this variable to yes is not generally useful, and thus not
# recommended.  Note that the <recall-message> function can be used
# to manually recall postponed messages.
# 
# Also see $postponed variable.
# 
# 
# set record="~/sent"
#
# Name: record
# Type: mailbox
# Default: "~/sent"
# 
# 
# This specifies the file into which your outgoing messages should be
# appended.  (This is meant as the primary method for saving a copy of
# your messages, but another way to do this is using the "my_hdr"
# command to create a "Bcc:" field with your email address in it.)
# 
# The value of $record is overridden by the $force_name and
# $save_name variables, and the "fcc-hook" command.  Also see $copy
# and $write_bcc.
# 
# 
# set reflow_space_quotes=yes
#
# Name: reflow_space_quotes
# Type: boolean
# Default: yes
# 
# 
# This option controls how quotes from format=flowed messages are displayed
# in the pager and when replying (with $text_flowed unset).
# When set, this option adds spaces after each level of quote marks, turning
# ">>>foo" into "> > > foo".
# 
# Note: If $reflow_text is unset, this option has no effect.
# Also, this option does not affect replies when $text_flowed is set.
# 
# 
# set reflow_text=yes
#
# Name: reflow_text
# Type: boolean
# Default: yes
# 
# 
# When set, NeoMutt will reformat paragraphs in text/plain
# parts marked format=flowed.  If unset, NeoMutt will display paragraphs
# unaltered from how they appear in the message body.  See RFC3676 for
# details on the format=flowed format.
# 
# Also see $reflow_wrap, and $wrap.
# 
# 
# set reflow_wrap=78
#
# Name: reflow_wrap
# Type: number
# Default: 78
# 
# 
# This variable controls the maximum paragraph width when reformatting text/plain
# parts when $reflow_text is set.  When the value is 0, paragraphs will
# be wrapped at the terminal's right margin.  A positive value sets the
# paragraph width relative to the left margin.  A negative value set the
# paragraph width relative to the right margin.
# 
# Be aware that the reformatted lines of a paragraph are still subject to $wrap.
# This means if $reflow_wrap is 40 and $wrap is 30, then the paragraph gets
# reformatted to 40 characters a line (due to $reflow_wrap) and afterwards
# each 40-character-line is split at 30 characters (due to $wrap), resulting in
# alternating line lengths of 30 and 10 characters.
# 
# Also see $wrap.
# 
# 
# set reply_regex="^((re|aw|sv)(\\[[0-9]+\\])*:[ \t]*)*"
#
# Name: reply_regex
# Type: regular expression
# Default: "^((re|aw|sv)(\\[[0-9]+\\])*:[ \t]*)*"
# 
# 
# A regular expression used to recognize reply messages when
# threading and replying. The default value corresponds to the
# standard Latin "Re:" prefix.
# 
# This value may have been localized by the translator for your
# locale, adding other prefixes that are common in the locale. You
# can add your own prefixes by appending inside "^(re)".  For
# example: "^(re|sv)" or "^(re|aw|sv)".
# 
# The second parenthesized expression matches zero or more
# bracketed numbers following the prefix, such as "Re[1]: ".
# The initial "\\[" means a literal left-bracket character.
# Note the backslash must be doubled when used inside a double
# quoted string in the neomuttrc.  "[0-9]+" means one or more
# numbers.  "\\]" means a literal right-bracket.  Finally the
# whole parenthesized expression has a "*" suffix, meaning it
# can occur zero or more times.
# 
# The last part matches a colon followed by an optional space or
# tab.  Note "\t" is converted to a literal tab inside a
# double quoted string.  If you use a single quoted string, you
# would have to type an actual tab character, and would need to
# convert the double-backslashes to single backslashes.
# 
# Note: the result of this regex match against the subject is
# stored in the header cache.  Mutt isn't smart enough to
# invalidate a header cache entry based on changing $reply_regex,
# so if you aren't seeing correct values in the index, try
# temporarily turning off the header cache.  If that fixes the
# problem, then once the variable is set to your liking, remove
# your stale header cache files and turn the header cache back on.
# 
# 
# set reply_self=no
#
# Name: reply_self
# Type: boolean
# Default: no
# 
# 
# If unset and you are replying to a message sent by you, NeoMutt will
# assume that you want to reply to the recipients of that message rather
# than to yourself.
# 
# Also see the "alternates" command.
# 
# 
# set reply_to=ask-yes
#
# Name: reply_to
# Type: quadoption
# Default: ask-yes
# 
# 
# If set, when replying to a message, NeoMutt will use the address listed
# in the Reply-to: header as the recipient of the reply.  If unset,
# it will use the address in the From: header field instead.  This
# option is useful for reading a mailing list that sets the Reply-To:
# header field to the list address and you want to send a private
# message to the author of a message.
# 
# 
# set reply_with_xorig=no
#
# Name: reply_with_xorig
# Type: boolean
# Default: no
# 
# 
# This variable provides a toggle. When active, the From: header will be
# extracted from the current mail's 'X-Original-To:' header. This setting
# does not have precedence over "reverse_real_name".
# 
# Assuming 'fast_reply' is disabled, this option will prompt the user with a
# prefilled From: header.
# 
# 
# set resolve=yes
#
# Name: resolve
# Type: boolean
# Default: yes
# 
# 
# When set, the cursor in a list will be automatically advanced to the
# next (possibly undeleted) message/attachment/entry whenever a command that
# modifies the current message/attachment/entry is executed.
# 
# Examples of such commands are tagging a message, deleting an entry, or
# saving an attachment.
# 
# 
# set resume_draft_files=no
#
# Name: resume_draft_files
# Type: boolean
# Default: no
# 
# 
# If set, draft files (specified by -H on the command
# line) are processed similarly to when resuming a postponed
# message.  Recipients are not prompted for; send-hooks are not
# evaluated; no alias expansion takes place; user-defined headers
# and signatures are not added to the message.
# 
# 
# set resume_edited_draft_files=yes
#
# Name: resume_edited_draft_files
# Type: boolean
# Default: yes
# 
# 
# If set, draft files previously edited (via -E -H on
# the command line) will have $resume_draft_files automatically
# set when they are used as a draft file again.
# 
# The first time a draft file is saved, NeoMutt will add a header,
# X-Mutt-Resume-Draft to the saved file.  The next time the draft
# file is read in, if NeoMutt sees the header, it will set
# $resume_draft_files.
# 
# This option is designed to prevent multiple signatures,
# user-defined headers, and other processing effects from being
# made multiple times to the draft file.
# 
# 
# set reverse_alias=no
#
# Name: reverse_alias
# Type: boolean
# Default: no
# 
# 
# This variable controls whether or not NeoMutt will display the "personal"
# name from your aliases in the index menu if it finds an alias that
# matches the message's sender.  For example, if you have the following
# alias:
# alias juser abd30425@somewhere.net (Joe User)
# 
# and then you receive mail which contains the following header:
# From: abd30425@somewhere.net
# 
# It would be displayed in the index menu as "Joe User" instead of
# "abd30425@somewhere.net."  This is useful when the person's e-mail
# address is not human friendly.
# 
# 
# set reverse_name=no
#
# Name: reverse_name
# Type: boolean
# Default: no
# 
# 
# It may sometimes arrive that you receive mail to a certain machine,
# move the messages to another machine, and reply to some the messages
# from there.  If this variable is set, the default From: line of
# the reply messages is built using the address where you received the
# messages you are replying to if that address matches your
# "alternates".  If the variable is unset, or the address that would be
# used doesn't match your "alternates", the From: line will use
# your address on the current machine.
# 
# Also see the "alternates" command and $reverse_real_name.
# 
# 
# set reverse_real_name=yes
#
# Name: reverse_real_name
# Type: boolean
# Default: yes
# 
# 
# This variable fine-tunes the behavior of the $reverse_name feature.
# 
# When it is unset, NeoMutt will remove the real name part of a
# matching address.  This allows the use of the email address
# without having to also use what the sender put in the real name
# field.
# 
# When it is set, NeoMutt will use the matching address as-is.
# 
# In either case, a missing real name will be filled in afterwards
# using the value of $real_name.
# 
# 
# set rfc2047_parameters=yes
#
# Name: rfc2047_parameters
# Type: boolean
# Default: yes
# 
# 
# When this variable is set, NeoMutt will decode RFC2047-encoded MIME
# parameters. You want to set this variable when NeoMutt suggests you
# to save attachments to files named like:
# =?iso-8859-1?Q?file=5F=E4=5F991116=2Ezip?=
# =?utf-8?Q?z=C4=99ta.png?=
# 
# When this variable is set interactively, the change won't be
# active until you change folders.
# 
# Note that this use of RFC2047's encoding is explicitly
# prohibited by the standard, but nevertheless encountered in the
# wild and produced by, e.g., Outlook.
# 
# Also note that setting this parameter will not have the effect
# that NeoMutt generates this kind of encoding.  Instead, NeoMutt will
# unconditionally use the encoding specified in RFC2231.
# 
# 
# set save_address=no
#
# Name: save_address
# Type: boolean
# Default: no
# 
# 
# If set, NeoMutt will take the sender's full address when choosing a
# default folder for saving a mail. If $save_name or $force_name
# is set too, the selection of the Fcc folder will be changed as well.
# 
# 
# set save_empty=yes
#
# Name: save_empty
# Type: boolean
# Default: yes
# 
# 
# When unset, mailboxes which contain no saved messages will be removed
# when closed (the exception is $spool_file which is never removed).
# If set, mailboxes are never removed.
# 
# Note: This only applies to mbox and MMDF folders, NeoMutt does not
# delete MH and Maildir directories.
# 
# 
# set save_history=0
#
# Name: save_history
# Type: number
# Default: 0
# 
# 
# This variable controls the size of the history (per category) saved in the
# $history_file file.
# 
# Setting this to a value greater than $history is possible.  However, there
# will never be more than $history entries to select from even if more are
# recorded in the history file.
# 
# 
# set save_name=no
#
# Name: save_name
# Type: boolean
# Default: no
# 
# 
# This variable controls how copies of outgoing messages are saved.
# When set, a check is made to see if a mailbox specified by the
# recipient address exists (this is done by searching for a mailbox in
# the $folder directory with the username part of the
# recipient address).  If the mailbox exists, the outgoing message will
# be saved to that mailbox, otherwise the message is saved to the
# $record mailbox.
# 
# Also see the $force_name variable.
# 
# 
# set save_unsubscribed=no
#
# Name: save_unsubscribed
# Type: boolean
# Default: no
# 
# 
# When set, info about unsubscribed newsgroups will be saved into
# "newsrc" file and into cache.
# 
# 
# set score=yes
#
# Name: score
# Type: boolean
# Default: yes
# 
# 
# When this variable is unset, scoring is turned off.  This can
# be useful to selectively disable scoring for certain folders when the
# $score_threshold_delete variable and related are used.
# 
# 
# set score_threshold_delete=-1
#
# Name: score_threshold_delete
# Type: number
# Default: -1
# 
# 
# Messages which have been assigned a score equal to or lower than the value
# of this variable are automatically marked for deletion by NeoMutt.  Since
# NeoMutt scores are always greater than or equal to zero, the default setting
# of this variable will never mark a message for deletion.
# 
# 
# set score_threshold_flag=9999
#
# Name: score_threshold_flag
# Type: number
# Default: 9999
# 
# 
# Messages which have been assigned a score greater than or equal to this
# variable's value are automatically marked "flagged".
# 
# 
# set score_threshold_read=-1
#
# Name: score_threshold_read
# Type: number
# Default: -1
# 
# 
# Messages which have been assigned a score equal to or lower than the value
# of this variable are automatically marked as read by NeoMutt.  Since
# NeoMutt scores are always greater than or equal to zero, the default setting
# of this variable will never mark a message read.
# 
# 
# set search_context=0
#
# Name: search_context
# Type: number
# Default: 0
# 
# 
# For the pager, this variable specifies the number of lines shown
# before search results. By default, search results will be top-aligned.
# 
# 
# set send_charset="us-ascii:iso-8859-1:utf-8"
#
# Name: send_charset
# Type: string list
# Default: "us-ascii:iso-8859-1:utf-8"
# 
# 
# A colon-delimited list of character sets for outgoing messages. NeoMutt will use the
# first character set into which the text can be converted exactly.
# If your $charset is not "iso-8859-1" and recipients may not
# understand "UTF-8", it is advisable to include in the list an
# appropriate widely used standard character set (such as
# "iso-8859-2", "koi8-r" or "iso-2022-jp") either instead of or after
# "iso-8859-1".
# 
# In case the text can't be converted into one of these exactly,
# NeoMutt uses $charset as a fallback.
# 
# 
# set sendmail="/usr/sbin/sendmail -oem -oi"
#
# Name: sendmail
# Type: command
# Default: "/usr/sbin/sendmail -oem -oi"
# 
# 
# Specifies the program and arguments used to deliver mail sent by NeoMutt.
# NeoMutt expects that the specified program interprets additional
# arguments as recipient addresses.  NeoMutt appends all recipients after
# adding a -- delimiter (if not already present).  Additional
# flags, such as for $use_8bit_mime, $use_envelope_from,
# $dsn_notify, or $dsn_return will be added before the delimiter.
# 
# Note: This command is invoked differently from most other
# commands in NeoMutt.  It is tokenized by space, and invoked directly
# via execvp(3) with an array of arguments - so commands or
# arguments with spaces in them are not supported.  The shell is
# not used to run the command, so shell quoting is also not
# supported.
# 
# See also: $write_bcc.
# 
# 
# set sendmail_wait=0
#
# Name: sendmail_wait
# Type: number
# Default: 0
# 
# 
# Specifies the number of seconds to wait for the $sendmail process
# to finish before giving up and putting delivery in the background.
# 
# NeoMutt interprets the value of this variable as follows:
# >0      number of seconds to wait for sendmail to finish before continuing
# 0       wait forever for sendmail to finish
# <0      always put sendmail in the background without waiting
# 
# 
# Note that if you specify a value other than 0, the output of the child
# process will be put in a temporary file.  If there is some error, you
# will be informed as to where to find the output.
# 
# 
# set shell="/bin/sh"
#
# Name: shell
# Type: command
# Default: "/bin/sh"
# 
# 
# Command to use when spawning a subshell.
# If not specified, then the user's login shell from /etc/passwd is used.
# 
# 
# set show_multipart_alternative=""
#
# Name: show_multipart_alternative
# Type: string
# Default: ""
# 
# 
# When set to info, the multipart/alternative information is shown.
# When set to inline, all of the alternatives are displayed.
# When not set, the default behavior is to show only the chosen alternative.
# 
# 
# set show_new_news=yes
#
# Name: show_new_news
# Type: boolean
# Default: yes
# 
# 
# If set, news server will be asked for new newsgroups on entering
# the browser.  Otherwise, it will be done only once for a news server.
# Also controls whether or not number of new articles of subscribed
# newsgroups will be then checked.
# 
# 
# set show_only_unread=no
#
# Name: show_only_unread
# Type: boolean
# Default: no
# 
# 
# If set, only subscribed newsgroups that contain unread articles
# will be displayed in browser.
# 
# 
# set sidebar_component_depth=0
#
# Name: sidebar_component_depth
# Type: number
# Default: 0
# 
# 
# By default the sidebar will show the mailbox's path, relative to the
# $folder variable. This specifies the number of parent directories to hide
# from display in the sidebar. For example: If a maildir is normally
# displayed in the sidebar as dir1/dir2/dir3/maildir, setting
# sidebar_component_depth=2 will display it as dir3/maildir, having
# truncated the 2 highest directories.
# 
# See also: $sidebar_short_path
# 
# 
# set sidebar_delim_chars="/."
#
# Name: sidebar_delim_chars
# Type: string
# Default: "/."
# 
# 
# This contains the list of characters which you would like to treat
# as folder separators for displaying paths in the sidebar.
# 
# Local mail is often arranged in directories: 'dir1/dir2/mailbox'.
# set sidebar_delim_chars='/'
# 
# IMAP mailboxes are often named: 'folder1.folder2.mailbox'.
# set sidebar_delim_chars='.'
# 
# See also: $sidebar_short_path, $sidebar_folder_indent, $sidebar_indent_string.
# 
# 
# set sidebar_divider_char="|"
#
# Name: sidebar_divider_char
# Type: string
# Default: "|"
# 
# 
# The default is a Unicode vertical line.
# 
# This specifies the characters to be drawn between the sidebar (when
# visible) and the other NeoMutt panels. ASCII and Unicode line-drawing
# characters are supported.
# 
# The divider char can be set to an empty string for some extra space.
# If empty, setting the sidebar_background color may help distinguish the
# sidebar from other panels.
# 
# 
# set sidebar_folder_indent=no
#
# Name: sidebar_folder_indent
# Type: boolean
# Default: no
# 
# 
# Set this to indent mailboxes in the sidebar.
# 
# See also: $sidebar_short_path, $sidebar_indent_string, $sidebar_delim_chars.
# 
# 
# set sidebar_format="%D%*  %n"
#
# Name: sidebar_format
# Type: string
# Default: "%D%*  %n"
# 
# 
# This variable allows you to customize the sidebar display. This string is
# similar to $index_format, but has its own set of printf(3)-like
# sequences:
# %a          Alert: 1 if user is notified of new mail
# %B          Name of the mailbox
# %d      * @ Number of deleted messages in the mailbox
# %D          Descriptive name of the mailbox
# %F      *   Number of flagged messages in the mailbox
# %L      * @ Number of messages after limiting
# %n          "N" if mailbox has new mail, " " (space) otherwise
# %N      *   Number of unread messages in the mailbox (seen or unseen)
# %o      *   Number of old messages in the mailbox (unread, seen)
# %p          Poll: 1 if Mailbox is checked for new mail
# %r      *   Number of read messages in the mailbox (read, seen)
# %S      *   Size of mailbox (total number of messages)
# %t      * @ Number of tagged messages in the mailbox
# %Z      *   Number of new messages in the mailbox (unread, unseen)
# %!          "!" : one flagged message;
#         "!!" : two flagged messages;
#         "n!" : n flagged messages (for n > 2).
#         Otherwise prints nothing.
# %>X     Right justify the rest of the string and pad with "X"
# %|X     Pad to the end of the line with "X"
# %*X     Soft-fill with character "X" as pad
# 
# 
# * = Can be optionally printed if nonzero
# 
# @ = Only applicable to the current folder
# 
# In order to use %S, %N, %F, and %!, $mail_check_stats must
# be set.  When thus set, a suggested value for this option is
# "%B%<F? [%F]>%* %<N?%N/>%S".
# 
# 
# set sidebar_indent_string="  "
#
# Name: sidebar_indent_string
# Type: string
# Default: "  "
# 
# 
# This specifies the string that is used to indent mailboxes in the sidebar.
# It defaults to two spaces.
# 
# See also: $sidebar_short_path, $sidebar_folder_indent, $sidebar_delim_chars.
# 
# 
# set sidebar_new_mail_only=no
#
# Name: sidebar_new_mail_only
# Type: boolean
# Default: no
# 
# 
# When set, the sidebar will only display mailboxes containing new, or
# flagged, mail.
# 
# See also: sidebar_pin, $sidebar_non_empty_mailbox_only.
# 
# 
# set sidebar_next_new_wrap=no
#
# Name: sidebar_next_new_wrap
# Type: boolean
# Default: no
# 
# 
# When set, the <sidebar-next-new> command will not stop at the end of
# the list of mailboxes, but wrap around to the beginning. The
# <sidebar-prev-new> command is similarly affected, wrapping around to
# the end of the list.
# 
# 
# set sidebar_non_empty_mailbox_only=no
#
# Name: sidebar_non_empty_mailbox_only
# Type: boolean
# Default: no
# 
# 
# When set, the sidebar will only display mailboxes that contain one or more mails.
# 
# See also: $sidebar_new_mail_only, sidebar_pin.
# 
# 
# set sidebar_on_right=no
#
# Name: sidebar_on_right
# Type: boolean
# Default: no
# 
# 
# When set, the sidebar will appear on the right-hand side of the screen.
# 
# 
# set sidebar_short_path=no
#
# Name: sidebar_short_path
# Type: boolean
# Default: no
# 
# 
# By default the sidebar will show the mailbox's path, relative to the
# $folder variable. Setting sidebar_shortpath=yes will shorten the
# names relative to the previous name. Here's an example:
# shortpath=no shortpath=yes shortpath=yes, folderindent=yes, indentstr=".."
# fruit           fruit         fruit
# fruit.apple  apple         ..apple
# fruit.banana banana        ..banana
# fruit.cherry cherry        ..cherry
# 
# 
# See also: $sidebar_delim_chars, $sidebar_folder_indent,
# $sidebar_indent_string, $sidebar_component_depth.
# 
# 
# set sidebar_sort=unsorted
#
# Name: sidebar_sort
# Type: sort order
# Default: unsorted
# 
# 
# Specifies how to sort mailbox entries in the sidebar.  By default, the
# entries are unsorted.  Valid values:
# - count (all message count)
# - desc (mailbox description)
# - flagged (flagged message count)
# - path (alphabetically)
# - unread (unread message count)
# - unsorted
# 
# 
# You may optionally use the "reverse-" prefix to specify reverse sorting
# order (example: "set sidebar_sort=reverse-path").
# 
# The alpha and name values are synonyms for path. The
# new value is a synonym for unread.
# 
# 
# set sidebar_visible=no
#
# Name: sidebar_visible
# Type: boolean
# Default: no
# 
# 
# This specifies whether or not to show sidebar. The sidebar shows a list of
# all your mailboxes.
# 
# See also: $sidebar_format, $sidebar_width
# 
# 
# set sidebar_width=30
#
# Name: sidebar_width
# Type: number
# Default: 30
# 
# 
# This controls the width of the sidebar.  It is measured in screen columns.
# For example: sidebar_width=20 could display 20 ASCII characters, or 10
# Chinese characters.
# 
# 
# set sig_dashes=yes
#
# Name: sig_dashes
# Type: boolean
# Default: yes
# 
# 
# If set, a line containing "-- " (note the trailing space) will be inserted before your
# $signature.  It is strongly recommended that you not unset
# this variable unless your signature contains just your name.  The
# reason for this is because many software packages use "-- \n" to
# detect your signature.  For example, NeoMutt has the ability to highlight
# the signature in a different color in the built-in pager.
# 
# 
# set sig_on_top=no
#
# Name: sig_on_top
# Type: boolean
# Default: no
# 
# 
# If set, the signature will be included before any quoted or forwarded
# text.  It is strongly recommended that you do not set this variable
# unless you really know what you are doing, and are prepared to take
# some heat from netiquette guardians.
# 
# 
# set signature="~/.signature"
#
# Name: signature
# Type: path
# Default: "~/.signature"
# 
# 
# Specifies the filename of your signature, which is appended to all
# outgoing messages.   If the filename ends with a pipe ("|"), it is
# assumed that filename is a shell command and input should be read from
# its standard output.
# 
# 
# set simple_search="~f %s | ~s %s"
#
# Name: simple_search
# Type: string
# Default: "~f %s | ~s %s"
# 
# 
# Specifies how NeoMutt should expand a simple search into a real search
# pattern.  A simple search is one that does not contain any of the "~" pattern
# operators.  See "patterns" for more information on search patterns.
# 
# simple_search applies to several functions, e.g. <delete-pattern>,
# <limit>, searching in the index, and all of the index colors.
# 
# For example, if you simply type "joe" at a search or limit prompt, NeoMutt
# will automatically expand it to the value specified by this variable by
# replacing "%s" with the supplied string.
# For the default value, "joe" would be expanded to: "~f joe | ~s joe".
# 
# 
# set size_show_bytes=no
#
# Name: size_show_bytes
# Type: boolean
# Default: no
# 
# 
# If set, message sizes will display bytes for values less than
# 1 kilobyte.  See formatstrings-size.
# 
# 
# set size_show_fractions=yes
#
# Name: size_show_fractions
# Type: boolean
# Default: yes
# 
# 
# If set, message sizes will be displayed with a single decimal value
# for sizes from 0 to 10 kilobytes and 1 to 10 megabytes.
# See formatstrings-size.
# 
# 
# set size_show_mb=yes
#
# Name: size_show_mb
# Type: boolean
# Default: yes
# 
# 
# If set, message sizes will display megabytes for values greater than
# or equal to 1 megabyte.  See formatstrings-size.
# 
# 
# set size_units_on_left=no
#
# Name: size_units_on_left
# Type: boolean
# Default: no
# 
# 
# If set, message sizes units will be displayed to the left of the number.
# See formatstrings-size.
# 
# 
# set sleep_time=1
#
# Name: sleep_time
# Type: number
# Default: 1
# 
# 
# Specifies time, in seconds, to pause while displaying certain informational
# messages, while moving from folder to folder and after expunging
# messages from the current folder.  The default is to pause one second, so
# a value of zero for this option suppresses the pause.
# 
# 
# set smart_wrap=yes
#
# Name: smart_wrap
# Type: boolean
# Default: yes
# 
# 
# Controls the display of lines longer than the screen width in the
# internal pager. If set, long lines are wrapped at a word boundary.  If
# unset, lines are simply wrapped at the screen edge. Also see the
# $markers variable.
# 
# 
# set smileys="(>From )|(:[-^]?[][)(><}{|/DP])"
#
# Name: smileys
# Type: regular expression
# Default: "(>From )|(:[-^]?[][)(><}{|/DP])"
# 
# 
# The pager uses this variable to catch some common false
# positives of $quote_regex, most notably smileys and not consider
# a line quoted text if it also matches $smileys. This mostly
# happens at the beginning of a line.
# 
# 
# set smime_ask_cert_label=yes
#
# Name: smime_ask_cert_label
# Type: boolean
# Default: yes
# 
# 
# This flag controls whether you want to be asked to enter a label
# for a certificate about to be added to the database or not. It is
# set by default.
# (S/MIME only)
# 
# 
# set smime_ca_location=""
#
# Name: smime_ca_location
# Type: path
# Default: ""
# 
# 
# This variable contains the name of either a directory, or a file which
# contains trusted certificates for use with OpenSSL.
# (S/MIME only)
# 
# 
# set smime_certificates=""
#
# Name: smime_certificates
# Type: path
# Default: ""
# 
# 
# Since for S/MIME there is no pubring/secring as with PGP, NeoMutt has to handle
# storage and retrieval of keys by itself. This is very basic right
# now, and keys and certificates are stored in two different
# directories, both named as the hash-value retrieved from
# OpenSSL. There is an index file which contains mailbox-address
# keyid pairs, and which can be manually edited. This option points to
# the location of the certificates.
# (S/MIME only)
# 
# 
# set smime_decrypt_command=""
#
# Name: smime_decrypt_command
# Type: command
# Default: ""
# 
# 
# This format string specifies a command which is used to decrypt
# application/pkcs7-mime attachments.
# 
# The OpenSSL command formats have their own set of printf(3)-like sequences
# similar to PGP's:
# %a      The algorithm used for encryption.
# %c      One or more certificate IDs.
# %C      CA location:  Depending on whether $smime_ca_location
#         points to a directory or file, this expands to
#         "-CApath $smime_ca_location" or "-CAfile $smime_ca_location".
# %d      The message digest algorithm specified with $smime_sign_digest_alg.
# %f      Expands to the name of a file containing a message.
# %i      Intermediate certificates
# %k      The key-pair specified with $smime_default_key
# %s      Expands to the name of a file containing the signature part
#         of a multipart/signed attachment when verifying it.
# 
# 
# For examples on how to configure these formats, see the smime.rc in
# the samples/ subdirectory which has been installed on your system
# alongside the documentation.
# (S/MIME only)
# 
# 
# set smime_decrypt_use_default_key=yes
#
# Name: smime_decrypt_use_default_key
# Type: boolean
# Default: yes
# 
# 
# If set (default) this tells NeoMutt to use the default key for decryption. Otherwise,
# if managing multiple certificate-key-pairs, NeoMutt will try to use the mailbox-address
# to determine the key to use. It will ask you to supply a key, if it can't find one.
# (S/MIME only)
# 
# 
# set smime_default_key=""
#
# Name: smime_default_key
# Type: string
# Default: ""
# 
# 
# This is the default key-pair to use for S/MIME operations, and must be
# set to the keyid (the hash-value that OpenSSL generates) to work properly.
# 
# It will be used for encryption (see $postpone_encrypt and
# $smime_self_encrypt). If GPGME is enabled, this is the key id displayed
# by gpgsm.
# 
# It will be used for decryption unless $smime_decrypt_use_default_key
# is unset.
# 
# It will also be used for signing unless $smime_sign_as is set.
# 
# The (now deprecated) smime_self_encrypt_as is an alias for this
# variable, and should no longer be used.
# (S/MIME only)
# 
# 
# set smime_encrypt_command=""
#
# Name: smime_encrypt_command
# Type: command
# Default: ""
# 
# 
# This command is used to create encrypted S/MIME messages.
# 
# This is a format string, see the $smime_decrypt_command command for
# possible printf(3)-like sequences.
# (S/MIME only)
# 
# Encrypt the message to $smime_default_key too.
# (S/MIME only)
# 
# 
# set smime_encrypt_with="aes256"
#
# Name: smime_encrypt_with
# Type: string
# Default: "aes256"
# 
# 
# This sets the algorithm that should be used for encryption.
# Valid choices are "aes128", "aes192", "aes256", "des", "des3", "rc2-40", "rc2-64", "rc2-128".
# (S/MIME only)
# 
# 
# set smime_get_cert_command=""
#
# Name: smime_get_cert_command
# Type: command
# Default: ""
# 
# 
# This command is used to extract X509 certificates from a PKCS7 structure.
# 
# This is a format string, see the $smime_decrypt_command command for
# possible printf(3)-like sequences.
# (S/MIME only)
# 
# 
# set smime_get_cert_email_command=""
#
# Name: smime_get_cert_email_command
# Type: command
# Default: ""
# 
# 
# This command is used to extract the mail address(es) used for storing
# X509 certificates, and for verification purposes (to check whether the
# certificate was issued for the sender's mailbox).
# 
# This is a format string, see the $smime_decrypt_command command for
# possible printf(3)-like sequences.
# (S/MIME only)
# 
# 
# set smime_get_signer_cert_command=""
#
# Name: smime_get_signer_cert_command
# Type: command
# Default: ""
# 
# 
# This command is used to extract only the signers X509 certificate from a S/MIME
# signature, so that the certificate's owner may get compared to the
# email's "From:" field.
# 
# This is a format string, see the $smime_decrypt_command command for
# possible printf(3)-like sequences.
# (S/MIME only)
# 
# 
# set smime_import_cert_command=""
#
# Name: smime_import_cert_command
# Type: command
# Default: ""
# 
# 
# This command is used to import a certificate via smime_keys.
# 
# This is a format string, see the $smime_decrypt_command command for
# possible printf(3)-like sequences.  NOTE: %c and %k will default
# to $smime_sign_as if set, otherwise $smime_default_key.
# (S/MIME only)
# 
# 
# set smime_is_default=no
#
# Name: smime_is_default
# Type: boolean
# Default: no
# 
# 
# The default behavior of NeoMutt is to use PGP on all auto-sign/encryption
# operations. To override and to use OpenSSL instead this must be set.
# However, this has no effect while replying, since NeoMutt will automatically
# select the same application that was used to sign/encrypt the original
# message.  (Note that this variable can be overridden by unsetting $crypt_auto_smime.)
# (S/MIME only)
# 
# 
# set smime_keys=""
#
# Name: smime_keys
# Type: path
# Default: ""
# 
# 
# Since for S/MIME there is no pubring/secring as with PGP, NeoMutt has to handle
# storage and retrieval of keys/certs by itself. This is very basic right now,
# and stores keys and certificates in two different directories, both
# named as the hash-value retrieved from OpenSSL. There is an index file
# which contains mailbox-address keyid pair, and which can be manually
# edited. This option points to the location of the private keys.
# (S/MIME only)
# 
# 
# set smime_pk7out_command=""
#
# Name: smime_pk7out_command
# Type: command
# Default: ""
# 
# 
# This command is used to extract PKCS7 structures of S/MIME signatures,
# in order to extract the public X509 certificate(s).
# 
# This is a format string, see the $smime_decrypt_command command for
# possible printf(3)-like sequences.
# (S/MIME only)
# 
# 
# set smime_self_encrypt=yes
#
# Name: smime_self_encrypt
# Type: boolean
# Default: yes
# 
# 
# When set, S/MIME encrypted messages will also be encrypted
# using the certificate in $smime_default_key.
# (S/MIME only)
# 
# 
# set smime_sign_as=""
#
# Name: smime_sign_as
# Type: string
# Default: ""
# 
# 
# If you have a separate key to use for signing, you should set this
# to the signing key. Most people will only need to set $smime_default_key.
# (S/MIME only)
# 
# 
# set smime_sign_command=""
#
# Name: smime_sign_command
# Type: command
# Default: ""
# 
# 
# This command is used to created S/MIME signatures of type
# multipart/signed, which can be read by all mail clients.
# 
# This is a format string, see the $smime_decrypt_command command for
# possible printf(3)-like sequences.
# (S/MIME only)
# 
# 
# set smime_sign_digest_alg="sha256"
#
# Name: smime_sign_digest_alg
# Type: string
# Default: "sha256"
# 
# 
# This sets the algorithm that should be used for the signature message digest.
# Valid choices are "md5", "sha1", "sha224", "sha256", "sha384", "sha512".
# (S/MIME only)
# 
# 
# set smime_timeout=300
#
# Name: smime_timeout
# Type: number
# Default: 300
# 
# 
# The number of seconds after which a cached passphrase will expire if
# not used.
# (S/MIME only)
# 
# 
# set smime_verify_command=""
#
# Name: smime_verify_command
# Type: command
# Default: ""
# 
# 
# This command is used to verify S/MIME signatures of type multipart/signed.
# 
# This is a format string, see the $smime_decrypt_command command for
# possible printf(3)-like sequences.
# (S/MIME only)
# 
# 
# set smime_verify_opaque_command=""
#
# Name: smime_verify_opaque_command
# Type: command
# Default: ""
# 
# 
# This command is used to verify S/MIME signatures of type
# application/pkcs7-mime.
# 
# This is a format string, see the $smime_decrypt_command command for
# possible printf(3)-like sequences.
# (S/MIME only)
# 
# 
# set smtp_authenticators=""
#
# Name: smtp_authenticators
# Type: string list
# Default: ""
# 
# 
# This is a colon-separated list of authentication methods NeoMutt may
# attempt to use to log in to an SMTP server, in the order NeoMutt should
# try them.  Authentication methods are any SASL mechanism, e.g. "plain",
# "digest-md5", "gssapi" or "cram-md5".
# This option is case-insensitive. If it is "unset"
# (the default) NeoMutt will try all available methods, in order from
# most-secure to least-secure. Support for the "plain" mechanism is
# bundled; other mechanisms are provided by an external SASL library (look
# for '+sasl' in the output of neomutt -v).
# 
# Example:
# set smtp_authenticators="digest-md5:cram-md5"
# 
# 
# set smtp_oauth_refresh_command=""
#
# Name: smtp_oauth_refresh_command
# Type: command
# Default: ""
# 
# 
# The command to run to generate an OAUTH refresh token for
# authorizing your connection to your SMTP server.  This command will be
# run on every connection attempt that uses the OAUTHBEARER or XOAUTH2
# authentication mechanisms.  See "oauth" for details.
# 
# 
# set smtp_pass=""
#
# Name: smtp_pass
# Type: string
# Default: ""
# 
# 
# Specifies the password for your SMTP account.  If unset, NeoMutt will
# prompt you for your password when you first send mail via SMTP.
# See $smtp_url to configure NeoMutt to send mail via SMTP.
# 
# Warning: you should only use this option when you are on a
# fairly secure machine, because the superuser can read your neomuttrc even
# if you are the only one who can read the file.
# 
# 
# set smtp_url=""
#
# Name: smtp_url
# Type: string
# Default: ""
# 
# 
# Defines the SMTP smarthost where sent messages should relayed for
# delivery. This should take the form of an SMTP URL, e.g.:
# smtp[s]://[user[:pass]@]host[:port]
# 
# where "[...]" denotes an optional part.
# Setting this variable overrides the value of the $sendmail
# variable.
# 
# Also see $write_bcc.
# 
# 
# set smtp_user=""
#
# Name: smtp_user
# Type: string
# Default: ""
# 
# 
# The username for the SMTP server.
# 
# This variable defaults to your user name on the local machine.
# 
# 
# set socket_timeout=30
#
# Name: socket_timeout
# Type: number
# Default: 30
# 
# 
# Causes NeoMutt to timeout any socket connect/read/write operation (for IMAP,
# POP or SMTP) after this many seconds.  A negative value causes NeoMutt to
# wait indefinitely.
# 
# 
# set sort=date
#
# Name: sort
# Type: sort order
# Default: date
# 
# 
# Specifies how to sort messages in the "index" menu.  Valid values
# are:
# - date
# - date-received
# - from
# - label
# - score
# - size
# - spam
# - subject
# - threads
# - to
# - unsorted
# 
# 
# You may optionally use the "reverse-" prefix to specify reverse
# sorting order, or the "last-" prefix to sort threads based on the
# corresponding attribute of the last descendant rather than the
# thread root.  If both prefixes are in use, "reverse-" must come
# before "last-".  The "last-" prefix has no effect on a flat view.
# 
# Any ties in the primary sort are broken by $sort_aux.  When
# $use_threads is "threads" or "reverse", $sort controls the
# sorting between threads, and $sort_aux controls the sorting within
# a thread.
# 
# The "date-sent" value is a synonym for "date". The "mailbox-order" value is
# a synonym for "unsorted".
# 
# The values of "threads" and "reverse-threads" are legacy options,
# which cause the value of $sort_aux to also control sorting
# between threads, and they may not be used with the "last-" prefix.
# The preferred way to enable a threaded view is via
# $use_threads.  This variable can also be set via the
# <sort-mailbox> and <sort-reverse> functions.
# 
# Note: When $use_threads is "threads", the last thread sorts to the
# bottom; when it is "reversed", the last thread sorts to the top.
# The use of "reverse-" in $sort swaps which end the last thread
# will sort to.
# 
# See the "Use Threads Feature" section for further explanation and
# examples, https://neomutt.org/feature/use-threads
# 
# 
# set sort_aux=date
#
# Name: sort_aux
# Type: sort order
# Default: date
# 
# 
# This provides a secondary sort for messages in the "index" menu, used
# when the $sort value is equal for two messages.
# 
# When sorting by threads, this variable controls how subthreads are
# sorted within a single thread (for the order between threads, see
# $sort).  This can be set to any value that $sort can, including
# with the use of "reverse-" and "last-" prefixes, except for
# variations using "threads" (in that case, NeoMutt will just use
# "date").  For instance,
# set sort_aux=last-date-received
# 
# would mean that if a new message is received in a thread, that
# subthread becomes the last one displayed (or the first, if you have
# "set use_threads=reverse".)  When using $use_threads, it is
# more common to use "last-" with $sort and not with $sort_aux.
# 
# See the "Use Threads Feature" section for further explanation and
# examples, https://neomutt.org/feature/use-threads
# 
# 
# set sort_re=yes
#
# Name: sort_re
# Type: boolean
# Default: yes
# 
# 
# This variable is only useful when sorting by threads with $strict_threads
# unset.  In that case, it changes the heuristic neomutt uses to thread
# messages by subject.  With $sort_re set, neomutt will only attach a
# message as the child of another message by subject if the subject of the
# child message starts with a substring matching the setting of
# $reply_regex.  With $sort_re unset, neomutt will attach the message
# whether or not this is the case, as long as the non-$reply_regex parts of
# both messages are identical.
# 
# 
# set spam_separator=","
#
# Name: spam_separator
# Type: string
# Default: ","
# 
# 
# This variable controls what happens when multiple spam headers
# are matched: if unset, each successive header will overwrite any
# previous matches value for the spam label. If set, each successive
# match will append to the previous, using this variable's value as a
# separator.
# 
# 
# set spool_file=""
#
# Name: spool_file
# Type: mailbox
# Default: ""
# 
# 
# If your spool mailbox is in a non-default place where NeoMutt can't find
# it, you can specify its location with this variable. The description from
# "named-mailboxes" or "virtual-mailboxes" may be used for the spool_file.
# 
# If not specified, then the environment variables $MAIL and
# $MAILDIR will be checked.
# 
# 
# set ssl_ca_certificates_file=""
#
# Name: ssl_ca_certificates_file
# Type: path
# Default: ""
# 
# 
# This variable specifies a file containing trusted CA certificates.
# Any server certificate that is signed with one of these CA
# certificates is also automatically accepted. (GnuTLS only)
# 
# Example:
# set ssl_ca_certificates_file=/etc/ssl/certs/ca-certificates.crt
# 
# 
# set ssl_ciphers=""
#
# Name: ssl_ciphers
# Type: string
# Default: ""
# 
# 
# Contains a colon-separated list of ciphers to use when using SSL.
# For OpenSSL, see ciphers(1) for the syntax of the string.
# 
# For GnuTLS, this option will be used in place of "NORMAL" at the
# start of the priority string.  See gnutls_priority_init(3) for the
# syntax and more details. (Note: GnuTLS version 2.1.7 or higher is
# required.)
# 
# 
# set ssl_client_cert=""
#
# Name: ssl_client_cert
# Type: path
# Default: ""
# 
# 
# The file containing a client certificate and its associated private
# key.
# 
# 
# set ssl_force_tls=yes
#
# Name: ssl_force_tls
# Type: boolean
# Default: yes
# 
# 
# If this variable is set, NeoMutt will require that all connections
# to remote servers be encrypted. Furthermore it will attempt to
# negotiate TLS even if the server does not advertise the capability,
# since it would otherwise have to abort the connection anyway. This
# option supersedes $ssl_starttls.
# 
# 
# set ssl_min_dh_prime_bits=0
#
# Name: ssl_min_dh_prime_bits
# Type: number
# Default: 0
# 
# 
# This variable specifies the minimum acceptable prime size (in bits)
# for use in any Diffie-Hellman key exchange. A value of 0 will use
# the default from the GNUTLS library. (GnuTLS only)
# 
# 
# set ssl_starttls=yes
#
# Name: ssl_starttls
# Type: quadoption
# Default: yes
# 
# 
# If set (the default), NeoMutt will attempt to use STARTTLS on servers
# advertising the capability. When unset, NeoMutt will not attempt to
# use STARTTLS regardless of the server's capabilities.
# 
# Note that STARTTLS is subject to many kinds of
# attacks, including the ability of a machine-in-the-middle to
# suppress the advertising of support.  Setting $ssl_force_tls is
# recommended if you rely on STARTTLS.
# 
# 
# set ssl_use_sslv3=no
#
# Name: ssl_use_sslv3
# Type: boolean
# Default: no
# 
# 
# If set , NeoMutt will use SSLv3 when communicating with servers that
# request it. N.B. As of 2015, SSLv3 is considered insecure, and using
# it is inadvisable. See https://tools.ietf.org/html/rfc7525
# 
# 
# set ssl_use_tlsv1=no
#
# Name: ssl_use_tlsv1
# Type: boolean
# Default: no
# 
# 
# If set , NeoMutt will use TLSv1.0 when communicating with servers that
# request it. N.B. As of 2015, TLSv1.0 is considered insecure, and using
# it is inadvisable. See https://tools.ietf.org/html/rfc7525
# 
# 
# set ssl_use_tlsv1_1=no
#
# Name: ssl_use_tlsv1_1
# Type: boolean
# Default: no
# 
# 
# If set , NeoMutt will use TLSv1.1 when communicating with servers that
# request it. N.B. As of 2015, TLSv1.1 is considered insecure, and using
# it is inadvisable. See https://tools.ietf.org/html/rfc7525
# 
# 
# set ssl_use_tlsv1_2=yes
#
# Name: ssl_use_tlsv1_2
# Type: boolean
# Default: yes
# 
# 
# If set , NeoMutt will use TLSv1.2 when communicating with servers that
# request it.
# 
# 
# set ssl_use_tlsv1_3=yes
#
# Name: ssl_use_tlsv1_3
# Type: boolean
# Default: yes
# 
# 
# If set , NeoMutt will use TLSv1.3 when communicating with servers that
# request it.
# 
# 
# set ssl_verify_dates=yes
#
# Name: ssl_verify_dates
# Type: boolean
# Default: yes
# 
# 
# If set (the default), NeoMutt will not automatically accept a server
# certificate that is either not yet valid or already expired. You should
# only unset this for particular known hosts, using the
# <account-hook> function.
# 
# 
# set ssl_verify_host=yes
#
# Name: ssl_verify_host
# Type: boolean
# Default: yes
# 
# 
# If set (the default), NeoMutt will not automatically accept a server
# certificate whose host name does not match the host used in your folder
# URL. You should only unset this for particular known hosts, using
# the <account-hook> function.
# 
# 
# set status_chars="-*%A"
#
# Name: status_chars
# Type: character string
# Default: "-*%A"
# 
# 
# Controls the characters used by the "%r" indicator in $status_format.
# Character Default Description
# 1       - Mailbox is unchanged
# 2       * Mailbox has been changed and needs to be resynchronized
# 3       % Mailbox is read-only, or will not be written when exiting.
#         (You can toggle whether to write changes to a mailbox
#         with the <toggle-write> operation, bound by default
#         to "%")
# 4       A Folder opened in attach-message mode.
#         (Certain operations like composing a new mail, replying,
#         forwarding, etc. are not permitted in this mode)
# 
# 
# set status_format="-%r-NeoMutt: %D [Msgs:%<M?%M/>%m%<n? New:%n>%<o? Old:%o>%<d? Del:%d>%<F? Flag:%F>%<t? Tag:%t>%<p? Post:%p>%<b? Inc:%b>%<l? %l>]---(%<T?%T/>%s/%S)-%>-(%P)---"
#
# Name: status_format
# Type: string
# Default: "-%r-NeoMutt: %D [Msgs:%<M?%M/>%m%<n? New:%n>%<o? Old:%o>%<d? Del:%d>%<F? Flag:%F>%<t? Tag:%t>%<p? Post:%p>%<b? Inc:%b>%<l? %l>]---(%<T?%T/>%s/%S)-%>-(%P)---"
# 
# 
# Controls the format of the status line displayed in the "index"
# menu.  This string is similar to $index_format, but has its own
# set of printf(3)-like sequences:
# %b      * Number of mailboxes with new mail
# %d      * Number of deleted messages
# %D        Description of the mailbox
# %f        The full pathname of the current mailbox
# %F      * Number of flagged messages
# %h        Local hostname
# %l      * Size (in bytes) of the current mailbox (see formatstrings-size)
# %L      * Size (in bytes) of the messages shown
#         (i.e., which match the current limit) (see formatstrings-size)
# %m      * The number of messages in the mailbox
# %M      * The number of messages shown (i.e., which match the current limit)
# %n      * Number of new messages in the mailbox (unread, unseen)
# %o      * Number of old messages in the mailbox (unread, seen)
# %p      * Number of postponed messages
# %P        Percentage of the way through the index
# %r        Modified/read-only/won't-write/attach-message indicator,
#         According to $status_chars
# %R      * Number of read messages in the mailbox (read, seen)
# %s        Current sorting mode ($sort)
# %S        Current aux sorting method ($sort_aux)
# %t      * Number of tagged messages in the mailbox
# %T      * Current threading mode ($use_threads)
# %u      * Number of unread messages in the mailbox (seen or unseen)
# %v        NeoMutt version string
# %V      * Currently active limit pattern, if any
# %>X       Right justify the rest of the string and pad with "X"
# %|X       Pad to the end of the line with "X"
# %*X       Soft-fill with character "X" as pad
# 
# 
# For an explanation of "soft-fill", see the $index_format documentation.
# 
# * = can be optionally printed if nonzero
# 
# Some of the above sequences can be used to optionally print a string
# if their value is nonzero.  For example, you may only want to see the
# number of flagged messages if such messages exist, since zero is not
# particularly meaningful.  To optionally print a string based upon one
# of the above sequences, the following construct is used:
# 
# %<sequence_char?optional_string>
# 
# where sequence_char is a character from the table above, and
# optional_string is the string you would like printed if
# sequence_char is nonzero.  optional_string may contain
# other sequences as well as normal text.
# 
# Here is an example illustrating how to optionally print the number of
# new messages in a mailbox:
# 
# %<n?%n new messages>
# 
# You can also switch between two strings using the following construct:
# 
# %<sequence_char?if_string&else_string>
# 
# If the value of sequence_char is non-zero, if_string will
# be expanded, otherwise else_string will be expanded.
# 
# As another example, here is how to show either $sort and
# $sort_aux or $use_threads and $sort, based on whether threads
# are enabled with $use_threads:
# 
# %<T?%s/%S&%T/%s>
# 
# You can force the result of any printf(3)-like sequence to be lowercase
# by prefixing the sequence character with an underscore ("_") sign.
# For example, if you want to display the local hostname in lowercase,
# you would use: "%_h".
# 
# If you prefix the sequence character with a colon (":") character, NeoMutt
# will replace any dots in the expansion by underscores. This might be helpful
# with IMAP folders that don't like dots in folder names.
# 
# 
# set status_on_top=no
#
# Name: status_on_top
# Type: boolean
# Default: no
# 
# 
# Setting this variable causes the "status bar" to be displayed on
# the first line of the screen rather than near the bottom. If $help
# is set too, it'll be placed at the bottom.
# 
# 
# set strict_threads=no
#
# Name: strict_threads
# Type: boolean
# Default: no
# 
# 
# If set, threading will only make use of the "In-Reply-To" and
# "References:" fields when you $sort by message threads.  By
# default, messages with the same subject are grouped together in
# "pseudo threads.". This may not always be desirable, such as in a
# personal mailbox where you might have several unrelated messages with
# the subjects like "hi" which will get grouped together. See also
# $sort_re for a less drastic way of controlling this
# behavior.
# 
# 
# set suspend=yes
#
# Name: suspend
# Type: boolean
# Default: yes
# 
# 
# When unset, NeoMutt won't stop when the user presses the terminal's
# susp key, usually "^Z". This is useful if you run NeoMutt
# inside an xterm using a command like "xterm -e neomutt".
# 
# On startup NeoMutt tries to detect if it is the process session leader.
# If so, the default of suspend is "no" otherwise "yes".  This default covers
# the above mentioned use case of "xterm -e neomutt".
# 
# 
# set text_flowed=no
#
# Name: text_flowed
# Type: boolean
# Default: no
# 
# 
# When set, NeoMutt will generate "format=flowed" bodies with a content type
# of "text/plain; format=flowed".
# This format is easier to handle for some mailing software, and generally
# just looks like ordinary text.  To actually make use of this format's
# features, you'll need support in your editor.
# 
# The option only controls newly composed messages.  Postponed messages,
# resent messages, and draft messages (via -H on the command line) will
# use the content-type of the source message.
# 
# Note that $indent_string is ignored when this option is set.
# 
# 
# set thorough_search=yes
#
# Name: thorough_search
# Type: boolean
# Default: yes
# 
# 
# Affects the ~b, ~B, and ~h search operations described in
# section "patterns".  If set, the headers and body/attachments of
# messages to be searched are decoded before searching. If unset,
# messages are searched as they appear in the folder.
# 
# Users searching attachments or for non-ASCII characters should set
# this value because decoding also includes MIME parsing/decoding and possible
# character set conversions. Otherwise NeoMutt will attempt to match against the
# raw message received (for example quoted-printable encoded or with encoded
# headers) which may lead to incorrect search results.
# 
# 
# set thread_received=no
#
# Name: thread_received
# Type: boolean
# Default: no
# 
# 
# If $strict_threads is unset, then messages may also be grouped by
# subject.  Unlike threading by "In-Reply-To:" and "References:" header,
# grouping by subject does not imply a parent-child relation between two
# messages.
# 
# To determine the ancestry between messages grouped by subject, Neomutt uses
# their date: only newer messages can be descendants of older ones.
# 
# When $thread_received is set, NeoMutt uses the date received rather
# than the date sent when comparing messages for the date.
# 
# See also $strict_threads, and $sort_re.
# 
# 
# set tilde=no
#
# Name: tilde
# Type: boolean
# Default: no
# 
# 
# When set, the internal-pager will pad blank lines to the bottom of the
# screen with a tilde ("~").
# 
# 
# set time_inc=0
#
# Name: time_inc
# Type: number
# Default: 0
# 
# 
# Along with $read_inc, $write_inc, and $net_inc, this
# variable controls the frequency with which progress updates are
# displayed. It suppresses updates less than $time_inc milliseconds
# apart. This can improve throughput on systems with slow terminals,
# or when running NeoMutt on a remote system.
# 
# Also see the "tuning" section of the manual for performance considerations.
# 
# 
# set timeout=600
#
# Name: timeout
# Type: number
# Default: 600
# 
# 
# When NeoMutt is waiting for user input either idling in menus or
# in an interactive prompt, NeoMutt would block until input is
# present. Depending on the context, this would prevent certain
# operations from working, like checking for new mail or keeping
# an IMAP connection alive.
# 
# This variable controls how many seconds NeoMutt will at most wait
# until it aborts waiting for input, performs these operations and
# continues to wait for input.
# 
# A value of zero or less will cause NeoMutt to never time out.
# 
# 
# set tmp_dir="/tmp"
#
# Name: tmp_dir
# Type: path
# Default: "/tmp"
# 
# 
# This variable allows you to specify where NeoMutt will place its
# temporary files needed for displaying and composing messages.
# 
# If this variable is not set, the environment variable $TMPDIR is
# used.  Failing that, then "/tmp" is used.
# 
# 
# set to_chars=" +TCFLR"
#
# Name: to_chars
# Type: character string
# Default: " +TCFLR"
# 
# 
# Controls the character used to indicate mail addressed to you.
# Character Default Description
# 1       <space> The mail is not addressed to your address.
# 2       + You are the only recipient of the message.
# 3       T Your address appears in the "To:" header field, but you are not the only recipient of the message.
# 4       C Your address is specified in the "Cc:" header field, but you are not the only recipient.
# 5       F Indicates the mail that was sent by you.
# 6       L Indicates the mail was sent to a mailing-list you subscribe to.
# 7       R Your address appears in the "Reply-To:" header field but none of the above applies.
# 
# 
# set toggle_quoted_show_levels=0
#
# Name: toggle_quoted_show_levels
# Type: number
# Default: 0
# 
# 
# Quoted text may be filtered out using the <toggle-quoted> command.
# If set to a number greater than 0, then the <toggle-quoted>
# command will only filter out quote levels above this number.
# 
# 
# set trash=""
#
# Name: trash
# Type: mailbox
# Default: ""
# 
# 
# If set, this variable specifies the path of the trash folder where the
# mails marked for deletion will be moved, instead of being irremediably
# purged.
# 
# NOTE: When you delete a message in the trash folder, it is really
# deleted, so that you have a way to clean the trash.
# 
# 
# set ts_enabled=no
#
# Name: ts_enabled
# Type: boolean
# Default: no
# 
# 
# Controls whether NeoMutt tries to set the terminal status line and icon name.
# Most terminal emulators emulate the status line in the window title.
# 
# 
# set ts_icon_format="M%<n?AIL&ail>"
#
# Name: ts_icon_format
# Type: string
# Default: "M%<n?AIL&ail>"
# 
# 
# Controls the format of the icon title, as long as "$ts_enabled" is set.
# This string is identical in formatting to the one used by
# "$status_format".
# 
# 
# set ts_status_format="NeoMutt with %<m?%m messages&no messages>%<n? [%n NEW]>"
#
# Name: ts_status_format
# Type: string
# Default: "NeoMutt with %<m?%m messages&no messages>%<n? [%n NEW]>"
# 
# 
# Controls the format of the terminal status line (or window title),
# provided that "$ts_enabled" has been set. This string is identical in
# formatting to the one used by "$status_format".
# 
# 
# set tunnel=""
#
# Name: tunnel
# Type: command
# Default: ""
# 
# 
# Setting this variable will cause NeoMutt to open a pipe to a command
# instead of a raw socket. You may be able to use this to set up
# preauthenticated connections to your IMAP/POP3/SMTP server. Example:
# set tunnel="ssh -q mailhost.net /usr/local/libexec/imapd"
# 
# Note: For this example to work you must be able to log in to the remote
# machine without having to enter a password.
# 
# When set, NeoMutt uses the tunnel for all remote connections.
# Please see "account-hook" in the manual for how to use different
# tunnel commands per connection.
# 
# 
# set tunnel_is_secure=yes
#
# Name: tunnel_is_secure
# Type: boolean
# Default: yes
# 
# 
# When set, NeoMutt will assume the $tunnel connection does not need
# STARTTLS to be enabled.  It will also allow IMAP PREAUTH server
# responses inside a tunnel to proceed.  This is appropriate if $tunnel
# uses ssh or directly invokes the server locally.
# 
# When unset, NeoMutt will negotiate STARTTLS according to the
# ssl_starttls and ssl_force_tls variables.  If ssl_force_tls is
# set, NeoMutt will abort connecting if an IMAP server responds with PREAUTH.
# This setting is appropriate if $tunnel does not provide security and
# could be tampered with by attackers.
# 
# 
# set uncollapse_jump=no
#
# Name: uncollapse_jump
# Type: boolean
# Default: no
# 
# 
# When set, NeoMutt will jump to the next unread message, if any,
# when the current thread is uncollapsed.
# 
# 
# set uncollapse_new=yes
#
# Name: uncollapse_new
# Type: boolean
# Default: yes
# 
# 
# When set, NeoMutt will automatically uncollapse any collapsed
# thread that receives a newly delivered message.  When
# unset, collapsed threads will remain collapsed. The
# presence of the newly delivered message will still affect index
# sorting, though.
# 
# 
# set use_8bit_mime=no
#
# Name: use_8bit_mime
# Type: boolean
# Default: no
# 
# 
# Warning: do not set this variable unless you are using a version
# of sendmail which supports the -B8BITMIME flag (such as sendmail
# 8.8.x) or you may not be able to send mail.
# 
# When set, NeoMutt will invoke $sendmail with the -B8BITMIME
# flag when sending 8-bit messages to enable ESMTP negotiation.
# 
# 
# set use_domain=yes
#
# Name: use_domain
# Type: boolean
# Default: yes
# 
# 
# When set, NeoMutt will qualify all local addresses (ones without the
# "@host" portion) with the value of $hostname.  If unset, no
# addresses will be qualified.
# 
# 
# set use_envelope_from=no
#
# Name: use_envelope_from
# Type: boolean
# Default: no
# 
# 
# When set, NeoMutt will set the envelope sender of the message.
# If $envelope_from_address is set, it will be used as the sender
# address. If unset, NeoMutt will attempt to derive the sender from the
# "From:" header.
# 
# Note that this information is passed to sendmail command using the
# -f command line switch. Therefore setting this option is not useful
# if the $sendmail variable already contains -f or if the
# executable pointed to by $sendmail doesn't support the -f switch.
# 
# 
# set use_from=yes
#
# Name: use_from
# Type: boolean
# Default: yes
# 
# 
# When set, NeoMutt will generate the "From:" header field when
# sending messages.  If unset, no "From:" header field will be
# generated unless the user explicitly sets one using the "my_hdr"
# command.
# 
# 
# set use_ipv6=yes
#
# Name: use_ipv6
# Type: boolean
# Default: yes
# 
# 
# When set, NeoMutt will look for IPv6 addresses of hosts it tries to
# contact.  If this option is unset, NeoMutt will restrict itself to IPv4 addresses.
# Normally, the default should work.
# 
# 
# set use_threads=unset
#
# Name: use_threads
# Type: enumeration
# Default: unset
# 
# 
# The style of threading used in the index. May be one of "flat" (no
# threading), "threads" (threaded, with subthreads below root
# message) or "reverse" (threaded, with subthreads above root
# message). For convenience, the value "yes" is a synonym for
# "threads", and "no" is a synonym for "flat".
# 
# If this variable is never set, then $sort controls whether
# threading is used, $sort_aux controls both the sorting of
# threads and subthreads, and using <sort-mailbox> to select
# threads affects only $sort.  Once this variable is set,
# attempting to set $sort to a value using "threads" will
# warn, the value of $sort controls the sorting between
# threads while $sort_aux controls sorting within a thread,
# and <sort-mailbox> toggles $use_threads.
# 
# Example:
# set use_threads=yes
# 
# See the "Use Threads Feature" section for further explanation and
# examples.
# 
# 
# set user_agent=no
#
# Name: user_agent
# Type: boolean
# Default: no
# 
# 
# When set, NeoMutt will add a "User-Agent:" header to outgoing
# messages, indicating which version of NeoMutt was used for composing
# them.
# 
# 
# set virtual_spool_file=no
#
# Name: virtual_spool_file
# Type: boolean
# Default: no
# 
# 
# This command is now unnecessary. $spool_file has been extended to support
# mailbox descriptions as a value.
# 
# When set, NeoMutt will use the first defined virtual mailbox (see
# virtual-mailboxes) as a spool file.
# 
# 
# set wait_key=yes
#
# Name: wait_key
# Type: boolean
# Default: yes
# 
# 
# Controls whether NeoMutt will ask you to press a key after an external command
# has been invoked by these functions: <shell-escape>,
# <pipe-message>, <pipe-entry>, <print-message>,
# and <print-entry> commands.
# 
# It is also used when viewing attachments with "auto_view", provided
# that the corresponding mailcap entry has a needsterminal flag,
# and the external program is interactive.
# 
# When set, NeoMutt will always ask for a key. When unset, NeoMutt will wait
# for a key only if the external command returned a non-zero status.
# 
# 
# set weed=yes
#
# Name: weed
# Type: boolean
# Default: yes
# 
# 
# When set, NeoMutt will weed headers when displaying, forwarding,
# or replying to messages.
# 
# Also see $copy_decode_weed, $pipe_decode_weed, $print_decode_weed.
# 
# 
# set wrap=0
#
# Name: wrap
# Type: number
# Default: 0
# 
# 
# When set to a positive value, NeoMutt will wrap text at $wrap characters.
# When set to a negative value, NeoMutt will wrap text so that there are $wrap
# characters of empty space on the right side of the terminal. Setting it
# to zero makes NeoMutt wrap at the terminal width.
# 
# Also see $reflow_wrap.
# 
# 
# set wrap_headers=78
#
# Name: wrap_headers
# Type: number
# Default: 78
# 
# 
# This option specifies the number of characters to use for wrapping
# an outgoing message's headers. Allowed values are between 78 and 998
# inclusive.
# 
# Note: This option usually shouldn't be changed. RFC5233
# recommends a line length of 78 (the default), so please only change
# this setting when you know what you're doing.
# 
# 
# set wrap_search=yes
#
# Name: wrap_search
# Type: boolean
# Default: yes
# 
# 
# Controls whether searches wrap around the end.
# 
# When set, searches will wrap around the first (or last) item. When
# unset, incremental searches will not wrap.
# 
# 
# set write_bcc=no
#
# Name: write_bcc
# Type: boolean
# Default: no
# 
# 
# Controls whether NeoMutt writes out the "Bcc:" header when
# preparing messages to be sent.  Some MTAs, such as Exim and
# Courier, do not strip the "Bcc:" header; so it is advisable to
# leave this unset unless you have a particular need for the header
# to be in the sent message.
# 
# If NeoMutt is set to deliver directly via SMTP(see $smtp_url),
# this option does nothing: NeoMutt will never write out the "Bcc:"
# header in this case.
# 
# Note this option only affects the sending of messages.  Fcc'ed
# copies of a message will always contain the "Bcc:" header if
# one exists.
# 
# 
# set write_inc=10
#
# Name: write_inc
# Type: number
# Default: 10
# 
# 
# When writing a mailbox, a message will be printed every
# $write_inc messages to indicate progress.  If set to 0, only a
# single message will be displayed before writing a mailbox.
# 
# Also see the $read_inc, $net_inc and $time_inc variables and the
# "tuning" section of the manual for performance considerations.
# 
# 
# set x_comment_to=no
#
# Name: x_comment_to
# Type: boolean
# Default: no
# 
# 
# If set, NeoMutt will add "X-Comment-To:" field (that contains full
# name of original article author) to article that followuped to newsgroup.
# 
# 
